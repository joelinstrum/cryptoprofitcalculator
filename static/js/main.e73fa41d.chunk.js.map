{"version":3,"sources":["components/elements/logo/logo.svg","lib/card-context.ts","components/elements/card/DeleteCard.tsx","components/elements/portal/Portal.tsx","components/elements/modal/Modal.tsx","components/elements/crypto-list/CryptoListHeaders.tsx","models/cryptos.ts","components/elements/spinner/Spinner.tsx","lib/api.ts","models/default-card.ts","lib/helpers.ts","components/elements/crypto-list/CryptoList.tsx","components/elements/tooltip/Tooltip.tsx","components/elements/card/SelectCrypto.tsx","components/elements/card/PurchasePrice.tsx","components/elements/card/hooks.tsx","components/elements/card/SellPrice.tsx","components/elements/card/Investment.tsx","components/elements/card/Results.tsx","components/elements/card/HistoricPrice.tsx","components/elements/card/Card.tsx","components/elements/cards/SaveCards.tsx","components/elements/cards/Cards.tsx","components/elements/logo/Logo.tsx","components/elements/app-header/AppHeader.tsx","models/pages/App/App.tsx","index.tsx"],"names":["_g","initialValues","updateCardHandler","cardId","mergeObject","deleteCard","CardContext","React","createContext","DeleteCard","className","enabled","useContext","CardsContext","onClick","Portal","children","parent","el","useMemo","document","createElement","useEffect","target","appendChild","body","classList","split","forEach","item","push","add","removeChild","ReactDOM","createPortal","Modal","title","closeOnOutsideClick","onClose","divRef","useRef","useState","classNames","e","htmlElement","current","contains","ref","CryptoListHeaders","cryptoCurrencies","AAVE","fullName","currentPrice","ticker","marketCap","change","ADA","ALGO","BTC","BCH","DAI","DOGE","DOT","ETH","LINK","LTC","MATIC","SHIB","SOL","UNI","XLM","XRP","XTZ","Spinner","fill","width","height","_fill","_width","_height","version","id","xmlns","x","y","viewBox","enableBackground","d","attributeType","attributeName","type","from","to","dur","repeatCount","apiUrl","api","get","tickers","a","tickersString","join","endpoint","headers","fetch","then","response","json","data","catch","error","fetchItem","timestamp","toUpperCase","defaultCard","Date","now","toString","cryptoName","cryptoTicker","cryptoPrice","purchasePrice","purchaseDate","sellPrice","sellDate","purchaseSource","sellSource","investment","investmentType","coins","initialCards","formatNumber","arg","maxDecimals","retval","s","endsInDecimal","length","numberArray","preDecimal","replaceAll","postDecimal","max","substring","parseInt","toLocaleString","toInt","_str","parseFloat","toFixed","isTruthy","storage","items","window","localStorage","setItem","JSON","stringify","getItem","parse","CrytpoList","clickHandler","isLoading","setIsLoading","cryptoList","setCryptoList","cryptos","getApi","_cryptoList","Object","keys","map","key","console","log","objects","DISPLAY","obj","USD","hasOwnProperty","PRICE","CHANGE24HOUR","MKTCAP","Fragment","undefined","_crypto","src","process","alt","Tooltip","text","animateArrow","showArrow","_className","_arrowClassname","SelectCrypto","cardData","setShowModal","showTooltip","Boolean","setEnabled","textClass","setTextClass","style","paddingTop","PurchasePrice","price","setPrice","timerRef","p","setTimeout","clearTimeout","usePrice","defaultRadio","defaultCustom","radioOption","setRadioOption","customPrice","setCustomPrice","customPurchase","useRadioHandler","radioHandler","value","updateTable","val","name","checked","onChange","disabled","_purchasePrice","SellPrice","customSell","setCustomSell","useSellRadioHandler","_sellPrice","Investment","setInvestment","setInvestmentType","lastSavedInput","setLastSavedInput","setCoins","labelClick","t","saveInput","_investment","onBlur","_coins","Results","totalReturn","setTotalReturn","net","setNet","isProfit","setIsProit","formattedCoins","setFormattedCoins","_return","_c","_p","calculateReturn","_net","initialInvestment","i","formatNet","HistoricPrice","dateValue","setDateValue","historicPrice","setHistoricPrice","hpClassname","setHpClassname","historicDate","setHistoricDate","getTime","toLocaleDateString","float","date","autoFocus","isOpen","maxDate","closeCalendar","fontWeight","Card","num","showModal","showPriceHistoricModal","setShowPriceHistoricModal","showSellHistoricModal","setSellPriceHistoricModal","incompletedStep","setIncompletedStep","closeModalHandler","step","CryptoList","SaveCards","saveCardsHandler","active","resetShouldUpdate","isSaving","setIsSaving","setClassName","setText","initialTime","Cards","cards","setCards","previousUpdate","setPreviousUpdate","setUpdateCardId","setMergeObject","shouldUpdate","setShouldUpdate","idx","findIndex","cardItem","_cards","providerValue","_cardId","_mergeObject","splice","Provider","n","newCard","_excluded","_extends","assign","arguments","source","prototype","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","titleId","props","xmlnsXlink","xmlSpace","ForwardRef","Logo","AppHeader","App","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e73fa41d.chunk.js","sourcesContent":["var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 470 470\",\n    style: {\n      enableBackground: \"new 0 0 470 470\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M357.25,210h-62c-4.143,0-7.5,3.357-7.5,7.5v30c0,4.143,3.357,7.5,7.5,7.5h62c4.143,0,7.5-3.357,7.5-7.5v-30 C364.75,213.357,361.393,210,357.25,210z M349.75,240h-47v-15h47V240z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M174,357.5h-61.25c-4.142,0-7.5,3.357-7.5,7.5v57.5c0,4.143,3.358,7.5,7.5,7.5H174c4.142,0,7.5-3.357,7.5-7.5V365 C181.5,360.857,178.142,357.5,174,357.5z M166.5,415h-46.25v-42.5h46.25V415z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M265.25,357.5H204c-4.142,0-7.5,3.357-7.5,7.5v57.5c0,4.143,3.358,7.5,7.5,7.5h61.25c4.143,0,7.5-3.357,7.5-7.5V365 C272.75,360.857,269.393,357.5,265.25,357.5z M257.75,415H211.5v-42.5h46.25V415z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M174,270h-61.25c-4.142,0-7.5,3.357-7.5,7.5V335c0,4.143,3.358,7.5,7.5,7.5H174c4.142,0,7.5-3.357,7.5-7.5v-57.5 C181.5,273.357,178.142,270,174,270z M166.5,327.5h-46.25V285h46.25V327.5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M265.25,270H204c-4.142,0-7.5,3.357-7.5,7.5V335c0,4.143,3.358,7.5,7.5,7.5h61.25c4.143,0,7.5-3.357,7.5-7.5v-57.5 C272.75,273.357,269.393,270,265.25,270z M257.75,327.5H211.5V285h46.25V327.5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M357.25,270h-62c-4.143,0-7.5,3.357-7.5,7.5v145c0,4.143,3.357,7.5,7.5,7.5h62c4.143,0,7.5-3.357,7.5-7.5v-50 c0-4.143-3.357-7.5-7.5-7.5s-7.5,3.357-7.5,7.5V415h-47V285h47v57.5c0,4.143,3.357,7.5,7.5,7.5s7.5-3.357,7.5-7.5v-65 C364.75,273.357,361.393,270,357.25,270z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M367.25,0h-264.5c-20.678,0-37.5,16.822-37.5,37.5v395c0,20.678,16.822,37.5,37.5,37.5h264.5 c20.678,0,37.5-16.822,37.5-37.5v-395C404.75,16.822,387.928,0,367.25,0z M389.75,432.5c0,12.406-10.094,22.5-22.5,22.5h-264.5 c-12.407,0-22.5-10.094-22.5-22.5v-395c0-12.406,10.093-22.5,22.5-22.5h264.5c12.406,0,22.5,10.094,22.5,22.5V432.5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M357.25,40H113.5c-4.142,0-7.5,3.357-7.5,7.5v90c0,4.143,3.358,7.5,7.5,7.5h243.75c4.143,0,7.5-3.357,7.5-7.5v-90 C364.75,43.357,361.393,40,357.25,40z M121,55h94.393l-75,75H121V55z M349.75,130H221.607l21.59-21.59 c2.929-2.93,2.929-7.678,0-10.607c-2.93-2.928-7.679-2.927-10.607,0L200.393,130h-38.786l75-75h38.785l-21.59,21.59 c-2.929,2.93-2.929,7.678,0,10.607c1.465,1.464,3.385,2.196,5.304,2.196s3.839-0.732,5.304-2.196L296.607,55h53.143V130z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M357.25,170H204c-4.142,0-7.5,3.357-7.5,7.5s3.358,7.5,7.5,7.5h153.25c4.143,0,7.5-3.357,7.5-7.5S361.393,170,357.25,170z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M174,170h-60.5c-4.142,0-7.5,3.357-7.5,7.5s3.358,7.5,7.5,7.5H174c4.142,0,7.5-3.357,7.5-7.5S178.142,170,174,170z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.c236a3e2.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\n\ninterface ICardContext {\n  updateCardHandler: (cardId: string, mergeObject: any) => void;\n  deleteCard: (cardId: string) => void;\n}\n\nconst initialValues: ICardContext = {\n  updateCardHandler: (cardId: string, mergeObject: any) => {},\n  deleteCard: (cardId: string) => {},\n};\n\nconst CardContext = React.createContext<ICardContext>(initialValues);\n\nexport default CardContext;\n","import React from \"react\";\nimport CardsContext from \"../../../lib/card-context\";\n\ninterface DeleteCardProps {\n  cardId: string;\n  enabled: boolean;\n}\nconst DeleteCard: React.FC<DeleteCardProps> = ({ cardId, enabled }) => {\n  const className = enabled ? \"card__delete_enabled\" : \"card__delete_disabled\";\n  const { deleteCard } = React.useContext(CardsContext);\n\n  return (\n    <div\n      className={`card__delete ${className}`}\n      onClick={() => deleteCard(cardId)}\n    >\n      <span className=\"card__delete_text\">&times;</span>\n    </div>\n  );\n};\n\nexport default DeleteCard;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface PortalProps {\n  children: React.ReactNode,\n  parent?: HTMLElement | null,\n  className?: string\n}\n\nconst Portal:React.FC<PortalProps> = ({ children, parent, className }) => {\n  // Create div to contain everything\n  const el = React.useMemo(() => document.createElement(\"div\"), []);\n  // On mount function\n  React.useEffect(() => {\n    // work out target in the DOM based on parent prop\n    const target = parent && parent.appendChild ? parent : document.body;\n    // Default classes\n    const classList = [\"portal-container\"];\n    // If className prop is present add each class the classList\n    if (className) className.split(\" \").forEach((item) => classList.push(item));\n    classList.forEach((item) => el.classList.add(item));\n    // Append element to dom\n    target.appendChild(el);\n    // On unmount function\n    return () => {\n      // Remove element from dom\n      target.removeChild(el);\n    };\n  }, [el, parent, className]);\n  // return the createPortal function\n  return ReactDOM.createPortal(children, el);\n}\n\nexport default Portal;","import React, { useRef, useState } from \"react\";\nimport Portal from \"../portal\";\n\ninterface ModalProps {\n  title: string;\n  children?: React.ReactNode;\n  closeOnOutsideClick?: boolean;\n  onClose: () => void;\n  className?: string;\n}\n\nconst Modal: React.FC<ModalProps> = ({\n  title,\n  children,\n  closeOnOutsideClick,\n  onClose,\n  className,\n}) => {\n  const divRef = useRef<HTMLDivElement>(null);\n  const [classNames] = useState(`modal__popup ${className}`);\n\n  const onClickHandler = (e: React.MouseEvent<HTMLDivElement>) => {\n    const htmlElement = e.target as HTMLDivElement;\n    if (\n      divRef.current &&\n      !divRef.current.contains(htmlElement) &&\n      closeOnOutsideClick\n    ) {\n      if (onClose) {\n        onClose();\n      }\n    }\n  };\n\n  return (\n    <Portal>\n      <div className=\"modal__container\" onClick={onClickHandler}>\n        <div className={classNames} ref={divRef}>\n          <div className=\"modal__popup_title_bar\">\n            <div className=\"modal__popup_title\">{title}</div>\n          </div>\n          {children}\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nconst CryptoListHeaders = () => {\n  return <div className='row crypto__list'>\n    <div className='crypto__list_header'>Name</div>\n    <div className='crypto__list_header'>Price</div>\n    <div className='crypto__list_header'>Change</div>\n    <div className='crypto__list_header'>Market cap</div>\n  </div> \n}\n\nexport default CryptoListHeaders;","export const cryptoCurrencies: ICryptoList = {\n  AAVE: {\n    fullName: \"Aave\",\n    currentPrice: null,\n    ticker: \"aave\",\n    marketCap: null,\n    change: null,\n  },\n  ADA: {\n    fullName: \"Cardano\",\n    currentPrice: \"\",\n    ticker: \"ada\",\n    marketCap: null,\n    change: null,\n  },\n  ALGO: {\n    fullName: \"Algorand\",\n    currentPrice: \"\",\n    ticker: \"algo\",\n    marketCap: null,\n    change: null,\n  },\n  BTC: {\n    fullName: \"Bitcoin\",\n    currentPrice: \"\",\n    ticker: \"btc\",\n    marketCap: null,\n    change: null,\n  },\n  BCH: {\n    fullName: \"Bitcoin Cash\",\n    currentPrice: null,\n    ticker: \"bch\",\n    marketCap: null,\n    change: null,\n  },\n  DAI: {\n    fullName: \"Dai\",\n    currentPrice: null,\n    ticker: \"dai\",\n    marketCap: null,\n    change: null,\n  },\n  DOGE: {\n    fullName: \"Doge\",\n    currentPrice: null,\n    ticker: \"doge\",\n    marketCap: null,\n    change: null,\n  },\n  DOT: {\n    fullName: \"Polkadot\",\n    currentPrice: null,\n    ticker: \"dot\",\n    marketCap: null,\n    change: null,\n  },\n  ETH: {\n    fullName: \"Ethereum\",\n    currentPrice: null,\n    ticker: \"eth\",\n    marketCap: null,\n    change: null,\n  },\n  LINK: {\n    fullName: \"Chainlink\",\n    currentPrice: null,\n    ticker: \"link\",\n    marketCap: null,\n    change: null,\n  },\n  LTC: {\n    fullName: \"Litecoin\",\n    currentPrice: null,\n    ticker: \"ltc\",\n    marketCap: null,\n    change: null,\n  },\n  MATIC: {\n    fullName: \"Polygon\",\n    currentPrice: null,\n    ticker: \"matic\",\n    marketCap: null,\n    change: null,\n  },\n  SHIB: {\n    fullName: \"Shibu\",\n    currentPrice: null,\n    ticker: \"shib\",\n    marketCap: null,\n    change: null,\n  },\n  SOL: {\n    fullName: \"Solana\",\n    currentPrice: null,\n    ticker: \"sol\",\n    marketCap: null,\n    change: null,\n  },\n  UNI: {\n    fullName: \"Uniswap\",\n    currentPrice: null,\n    ticker: \"uni\",\n    marketCap: null,\n    change: null,\n  },\n  XLM: {\n    fullName: \"Stellar Lumens\",\n    currentPrice: null,\n    ticker: \"xlm\",\n    marketCap: null,\n    change: null,\n  },\n  XRP: {\n    fullName: \"XRP\",\n    currentPrice: null,\n    ticker: \"xrp\",\n    marketCap: null,\n    change: null,\n  },\n  XTZ: {\n    fullName: \"Tezos\",\n    currentPrice: null,\n    ticker: \"xtz\",\n    marketCap: null,\n    change: null,\n  },\n};\n","import React from \"react\";\n\ninterface SpinnerProps {\n  fill?: string;\n  width?: string;\n  height?: string;\n}\n\nconst Spinner: React.FC<SpinnerProps> = ({ fill, width, height }) => {\n  const _fill = fill || \"#ccc\";\n  const _width = width ? `${width}px` : \"25px\";\n  const _height = height ? `${height}px` : \"25px\";\n\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"loader-1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      width={_width}\n      height={_height}\n      viewBox=\"0 0 50 50\"\n      enableBackground=\"new 0 0 50 50;\"\n    >\n      <path\n        fill={_fill}\n        d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\"\n      >\n        <animateTransform\n          attributeType=\"xml\"\n          attributeName=\"transform\"\n          type=\"rotate\"\n          from=\"0 25 25\"\n          to=\"360 25 25\"\n          dur=\"0.6s\"\n          repeatCount=\"indefinite\"\n        />\n      </path>\n    </svg>\n  );\n};\n\nexport default Spinner;\n","const apiUrl = \"https://min-api.cryptocompare.com/data\";\nexport const apiKey =\n  \"99aaa4bb27142e523129deada04160b07969ece51d99f154f9b1dc1befaa73c9\";\n\nconst api = {\n  get: async (tickers: string[]) => {\n    let tickersString = tickers.join(\",\");\n    const endpoint = `${apiUrl}/pricemultifull?fsyms=${tickersString}&tsyms=USD&extraParams=CryptoCalculator&ts=1605549600`;\n    const headers: object = {\n      \"Content-Type\": \"application-json\",\n    };\n    return fetch(endpoint, headers)\n      .then((response) => response.json())\n      .then((data) => data)\n      .catch((error: string) => {\n        return { error };\n      });\n  },\n  fetchItem: async (ticker: string, timestamp?: string) => {\n    const endpoint = timestamp\n      ? `${apiUrl}/pricehistorical?fsym=${ticker.toUpperCase()}&tsyms=USD&ts=${timestamp}&extraParams=CryptoCalculator`\n      : `${apiUrl}/price?fsym=${ticker.toUpperCase()}&tsyms=USD&extraParams=CryptoCalculator`;\n    const headers: object = {\n      \"Content-Type\": \"application-json\",\n    };\n    return fetch(endpoint, headers)\n      .then((response) => response.json())\n      .then((data) => data)\n      .catch((error) => {\n        return { error };\n      });\n  },\n};\n\nexport default api;\n","export const defaultCard: ICard = {\n  id: Date.now().toString(),\n  cryptoName: \"\",\n  cryptoTicker: \"\",\n  cryptoPrice: \"\",\n  purchasePrice: null,\n  purchaseDate: null,\n  sellPrice: null,\n  sellDate: null,\n  purchaseSource: \"\",\n  sellSource: \"\",\n  investment: null,\n  investmentType: null,\n  coins: null,\n};\n","import { defaultCard } from \"../models/default-card\";\n\nexport const initialCards: ICard[] = [defaultCard];\n\nexport const formatNumber = (\n  arg: string | number | null | undefined,\n  maxDecimals?: number\n) => {\n  let s = arg?.toString();\n  let retval;\n  if (s) {\n    if (s === \".\") {\n      return s;\n    }\n    const endsInDecimal = s[s.length - 1] === \".\";\n    let numberArray = s.split(\".\");\n    let preDecimal = numberArray[0].replaceAll(/[^0-9-]/g, \"\");\n    let postDecimal = numberArray.length > 1 ? numberArray[1] : \"\";\n    let max = maxDecimals || postDecimal.length;\n    if (maxDecimals && postDecimal.length > max) {\n      postDecimal = postDecimal.substring(0, max);\n    }\n    if (postDecimal) {\n      postDecimal = \".\" + postDecimal;\n    }\n    if (endsInDecimal) {\n      postDecimal = \".\";\n    }\n    if (preDecimal) {\n      preDecimal = parseInt(preDecimal, 10).toLocaleString(\"en-US\");\n      retval = preDecimal + postDecimal;\n    } else {\n      retval = postDecimal;\n    }\n  } else {\n    retval = \"\";\n  }\n  if (retval === \"NaN\") {\n    return \"\";\n  }\n  return retval;\n};\n\nexport const formatNet = (\n  initialInvestment: string | number | null,\n  totalReturn: string | number | null\n) => {\n  if (initialInvestment && totalReturn) {\n    let i = parseFloat(initialInvestment.toString().replaceAll(/[^0-9.]/g, \"\"));\n    let t = parseFloat(totalReturn.toString().replaceAll(/[^0-9.]/g, \"\"));\n    return (t - i).toFixed(2);\n  }\n  return null;\n};\n\nexport const toInt = (s: any, d?: number): any => {\n  if (s) {\n    let _str = s.toString().replaceAll(/[^0-9.]/gi, \"\");\n    if (d) {\n      return parseFloat(_str).toFixed(d);\n    }\n    return parseFloat(_str);\n  } else {\n    return 0;\n  }\n};\n\nexport const calculateReturn = (coins: any, sellPrice: any) => {\n  if (coins && sellPrice) {\n    let _c = toInt(coins, 4);\n    let _p = toInt(sellPrice, 4);\n    let r = formatNumber(_c * _p, 2);\n    return r;\n  } else {\n    return null;\n  }\n};\n\nexport const isTruthy = (item: any) => {\n  if (!item) {\n    return false;\n  }\n  if (item === 0) {\n    return false;\n  } else if (item === \"0\") {\n    return false;\n  }\n  return true;\n};\n\nexport const storage = {\n  save: (items: any) => {\n    window.localStorage.setItem(\"cards\", JSON.stringify(items));\n  },\n  get: () => {\n    let items = window.localStorage.getItem(\"cards\");\n    if (items) {\n      return JSON.parse(items);\n    }\n  },\n};\n\nexport const toTimestamp = (date: string) => {\n  var datum = Date.parse(date);\n  return datum / 1000;\n};\n\nexport const formatDate = (date: Date) => {\n  return date.toLocaleDateString(\"en-US\");\n};\n","import React, { useState, useEffect } from \"react\";\nimport CrtypoListHeaders from \"./CryptoListHeaders\";\nimport { cryptoCurrencies } from \"../../../models/cryptos\";\nimport Spinner from \"../spinner\";\nimport api from \"../../../lib/api\";\nimport { formatNumber } from \"../../../lib/helpers\";\n\ninterface CryptoListProps {\n  clickHandler: (\n    ticker: string,\n    fullName: string | null,\n    currentPrice: string | null | number\n  ) => void;\n}\n\nconst CrytpoList: React.FC<CryptoListProps> = ({ clickHandler }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [cryptoList, setCryptoList] = useState<any>();\n  const [cryptos] = useState<ICryptoList>(cryptoCurrencies);\n\n  useEffect(() => {\n    const getApi = async () => {\n      const _cryptoList: ICryptoList = { ...cryptos };\n      const tickers = Object.keys(_cryptoList).map((key) => key);\n      const data = await api.get(tickers);\n      console.log(data);\n      let objects = data?.DISPLAY;\n      if (objects) {\n        Object.keys(objects).forEach((key) => {\n          const obj = objects[key].USD;\n          if (_cryptoList.hasOwnProperty(key)) {\n            _cryptoList[key] = {\n              ..._cryptoList[key],\n              ...{\n                currentPrice: formatNumber(obj.PRICE, 6),\n                change: obj.CHANGE24HOUR,\n                marketCap: obj.MKTCAP,\n              },\n            };\n          }\n        });\n      }\n      setCryptoList(_cryptoList);\n      setIsLoading(false);\n    };\n    getApi();\n  }, [setIsLoading, setCryptoList, cryptos]);\n  return (\n    <React.Fragment>\n      {isLoading && cryptoList !== null && typeof cryptoList !== undefined ? (\n        <div className=\"table__loading\">\n          <div>Loading crypto data...</div>\n          <div>\n            <Spinner fill={\"#0388fc\"} />\n          </div>\n        </div>\n      ) : (\n        <div>\n          <CrtypoListHeaders />\n          {Object.keys(cryptoList).map((key: string) => {\n            const _crypto: ICrypto = cryptoList[key];\n            return (\n              <div\n                key={_crypto.ticker}\n                className=\"row crypto__list\"\n                onClick={() =>\n                  clickHandler(\n                    _crypto.ticker,\n                    _crypto.fullName,\n                    _crypto.currentPrice\n                  )\n                }\n              >\n                <div className=\"row\">\n                  <div className=\"crypto__list_name_container\">\n                    <img\n                      src={\n                        process.env.PUBLIC_URL +\n                        `/images/crypto-icons/${_crypto.ticker}.png`\n                      }\n                      alt={_crypto.ticker}\n                      className=\"crypto__list_icon\"\n                    />\n                  </div>\n                  <div className=\"crypto__list_name_container\">\n                    <div>{_crypto.fullName}</div>\n                    <div>{_crypto.ticker}</div>\n                  </div>\n                </div>\n                <div>{_crypto.currentPrice}</div>\n                <div>{_crypto.change}</div>\n                <div>{_crypto.marketCap}</div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default CrytpoList;\n","import React from \"react\";\n\ninterface TooltipProps {\n  text: string;\n  animateArrow?: boolean;\n  showArrow?: boolean;\n  className?: string;\n}\n\nconst Tooltip: React.FC<TooltipProps> = ({\n  text,\n  animateArrow,\n  showArrow,\n  className,\n}) => {\n  const _className = `${className} tooltip`;\n  let _arrowClassname = showArrow\n    ? \"tooltip__arrow_show\"\n    : \"tooltip__arrow_hide\";\n  _arrowClassname += animateArrow ? \" tooltip__arrow_animate\" : \"\";\n  return (\n    <div className={_className}>\n      <span className={_arrowClassname}>&#8592;</span>\n      <span>{text}</span>\n    </div>\n  );\n};\n\nexport default Tooltip;\n","import React, { Dispatch, SetStateAction, useState, useEffect } from \"react\";\nimport Tooltip from \"../tooltip\";\n\ninterface SelectCryptoProps {\n  cardData: ICard;\n  setShowModal: Dispatch<SetStateAction<boolean>>;\n  showTooltip: boolean;\n}\n\nconst SelectCrypto: React.FC<SelectCryptoProps> = ({\n  cardData,\n  setShowModal,\n  showTooltip,\n}) => {\n  const [enabled, setEnabled] = useState(Boolean(cardData.cryptoTicker));\n  const [textClass, setTextClass] = useState(\n    `${enabled ? \"text__header\" : \"text__disabled_header\"}`\n  );\n\n  useEffect(() => {\n    setEnabled(Boolean(cardData.cryptoTicker));\n  }, [setEnabled, setTextClass, cardData.cryptoTicker]);\n\n  useEffect(() => {\n    setTextClass(`${enabled ? \"text__header\" : \"text__disabled_header\"}`);\n  }, [enabled, setTextClass]);\n\n  return (\n    <div className=\"select__crypto_container\">\n      <div className={`row ${textClass}`}>\n        <div>\n          {cardData.cryptoName ? (\n            <React.Fragment>\n              <img\n                src={`${process.env.PUBLIC_URL}/images/crypto-icons/${cardData.cryptoTicker}.png`}\n                alt={cardData.cryptoName}\n              />\n              <span>\n                {cardData.cryptoName} - {cardData.cryptoTicker}\n              </span>\n            </React.Fragment>\n          ) : (\n            <div>Crypto</div>\n          )}\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"link2\" onClick={() => setShowModal(true)}>\n          Select a crypto\n        </div>\n        <div style={{ paddingTop: \"3px\" }}>\n          {showTooltip && (\n            <Tooltip\n              text=\"First, select a crypto\"\n              className=\"tooltip__container\"\n              showArrow={true}\n              animateArrow={true}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectCrypto;\n","import React, {\n  Dispatch,\n  SetStateAction,\n  useState,\n  useEffect,\n  useRef,\n} from \"react\";\nimport { formatNumber, toInt } from \"../../../lib/helpers\";\nimport Tooltip from \"../tooltip\";\nimport CardsContext from \"../../../lib/card-context\";\nimport { usePrice, useRadioHandler } from \"./hooks\";\n\ninterface PurchasePriceProps {\n  cardData: ICard;\n  showTooltip?: boolean;\n  setShowModal: Dispatch<SetStateAction<boolean>>;\n}\n\nconst PurchasePrice: React.FC<PurchasePriceProps> = ({\n  cardData,\n  showTooltip,\n  setShowModal,\n}) => {\n  const { price, setPrice } = usePrice(\n    cardData.cryptoTicker,\n    cardData.cryptoPrice,\n    cardData.purchaseSource\n  );\n  let defaultRadio = cardData.purchaseSource || \"\";\n  let defaultCustom =\n    cardData.purchaseSource === \"custom\" ? cardData.purchasePrice : \"\";\n  const [radioOption, setRadioOption] = useState(defaultRadio);\n  const { updateCardHandler } = React.useContext(CardsContext);\n  const [customPrice, setCustomPrice] = useState<any>(defaultCustom);\n  const [enabled, setEnabled] = useState(Boolean(cardData.cryptoTicker));\n  const [textClass, setTextClass] = useState(\n    `${enabled ? \"\" : \"text__disabled\"}`\n  );\n  let timerRef: any = useRef(null);\n\n  useRadioHandler(\n    radioOption,\n    price,\n    setPrice,\n    customPrice,\n    cardData.cryptoPrice,\n    cardData.id\n  );\n\n  const radioHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setRadioOption(e.target.value);\n  };\n\n  const customHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value !== \"$\") {\n      let _purchasePrice = formatNumber(e.target.value, 6);\n      if (_purchasePrice && _purchasePrice !== \"0\") {\n        setCustomPrice(\"$\" + _purchasePrice);\n      } else {\n        setCustomPrice(\"\");\n      }\n    } else {\n      setCustomPrice(\"\");\n    }\n    clearTimeout(timerRef.current);\n    updateTable(e.target.value);\n  };\n\n  const updateTable = (val: string) => {\n    timerRef.current = setTimeout(() => {\n      setPrice(toInt(val));\n      updateCardHandler(cardData.id, {\n        purchasePrice: val,\n      });\n    }, 100);\n  };\n\n  useEffect(() => {\n    setEnabled(Boolean(cardData.cryptoTicker));\n  }, [setEnabled, setTextClass, cardData.cryptoTicker]);\n\n  useEffect(() => {\n    setTextClass(`${enabled ? \"\" : \"text__disabled\"}`);\n  }, [enabled, setTextClass]);\n\n  const historicHandler = () => {\n    setRadioOption(\"historic\");\n    setShowModal(true);\n  };\n\n  useEffect(() => {\n    setPrice(cardData.purchasePrice);\n  }, [cardData.purchasePrice, setPrice]);\n\n  return (\n    <form>\n      <div className={`row margin__top_10 ${textClass}`}>\n        <div>\n          <label>Purchase price</label>\n          {price ? (\n            <React.Fragment>\n              <span className=\"card__purchasePrice\">\n                ${formatNumber(cardData.purchasePrice, 6)}\n              </span>\n              {radioOption === \"historic\" && cardData.purchaseDate ? (\n                <span className=\"text__small\"> on {cardData.purchaseDate}</span>\n              ) : (\n                <span />\n              )}\n            </React.Fragment>\n          ) : (\n            <span className=\"card_PurchasePrice\"></span>\n          )}\n        </div>\n        <div>\n          {showTooltip && (\n            <Tooltip\n              text=\"Set the sell-price for this cryptocurrency\"\n              className=\"tooltip__container\"\n              showArrow={true}\n              animateArrow={true}\n            />\n          )}\n        </div>\n      </div>\n      <div className={`margin__left_10 ${textClass}`}>\n        <div>\n          <span>\n            <input\n              type=\"radio\"\n              name=\"set-purchase\"\n              value=\"current\"\n              checked={radioOption === \"current\"}\n              onChange={radioHandler}\n              disabled={!enabled}\n            />\n          </span>\n          <label\n            className={enabled ? \"link2\" : \"\"}\n            onClick={() => {\n              if (enabled) setRadioOption(\"current\");\n            }}\n          >\n            Use current price\n          </label>\n        </div>\n        <div>\n          <span>\n            <input\n              type=\"radio\"\n              name=\"set-purchase\"\n              value=\"historic\"\n              checked={radioOption === \"historic\"}\n              onChange={radioHandler}\n              onClick={() => setShowModal(true)}\n              disabled={!enabled}\n            />\n          </span>\n          <label className={enabled ? \"link2\" : \"\"} onClick={historicHandler}>\n            Use price from date\n          </label>\n        </div>\n        <div>\n          <span>\n            <input\n              type=\"radio\"\n              name=\"set-purchase\"\n              value=\"custom\"\n              checked={radioOption === \"custom\"}\n              onChange={radioHandler}\n              disabled={!enabled}\n            />\n          </span>\n          <label\n            className={enabled ? \"link2\" : \"\"}\n            onClick={() => {\n              if (enabled) setRadioOption(\"custom\");\n            }}\n          >\n            Use custom purchase price\n          </label>\n          {radioOption === \"custom\" && enabled && (\n            <span>\n              <input\n                type=\"text\"\n                className=\"input__text_tiny_wider\"\n                onChange={customHandler}\n                value={customPrice}\n              />\n            </span>\n          )}\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default PurchasePrice;\n","import React, { useEffect, useState, Dispatch, SetStateAction } from \"react\";\nimport api from \"../../../lib/api\";\nimport { formatNumber } from \"../../../lib/helpers\";\nimport CardsContext from \"../../../lib/card-context\";\n\nexport const usePrice = (\n  ticker: string | null,\n  currentPrice: string | number | null,\n  purchaseSource: string | null\n) => {\n  const [price, setPrice] = useState(currentPrice);\n  let timerRef: any = React.useRef(null);\n\n  useEffect(() => {\n    const fetchItem = async () => {\n      const data = await api.fetchItem(ticker!);\n      const price = data.USD.toString();\n      const p = price.replaceAll(/[^a-z0-9.]/g, \"\");\n      setPrice(p);\n      timerRef.current = setTimeout(() => {\n        if (purchaseSource === \"current\") {\n          fetchItem();\n        }\n      }, 10000);\n    };\n    if (ticker && purchaseSource === \"current\") {\n      fetchItem();\n    } else {\n      window.clearTimeout(timerRef.current);\n    }\n    return () => {\n      window.clearTimeout(timerRef.current);\n    };\n  }, [ticker, purchaseSource, currentPrice]);\n\n  return { price, setPrice };\n};\n\nexport const useRadioHandler = (\n  radioOption: string,\n  price: string | number | null,\n  setPrice: Dispatch<SetStateAction<string | number | null>>,\n  customPurchase: any,\n  cryptoPrice: string | number | null,\n  id: string\n) => {\n  const { updateCardHandler } = React.useContext(CardsContext);\n  useEffect(() => {\n    switch (radioOption) {\n      case \"current\":\n        updateCardHandler(id, {\n          purchaseSource: \"current\",\n          purchasePrice: cryptoPrice,\n        });\n        break;\n\n      case \"custom\":\n        setPrice(formatNumber(customPurchase));\n        updateCardHandler(id, {\n          purchaseSource: \"custom\",\n          purchasePrice: customPurchase,\n        });\n        break;\n\n      case \"historic\":\n        break;\n\n      default:\n        setPrice(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [radioOption, price, customPurchase, cryptoPrice, id]);\n\n  return {\n    radioOption,\n    price,\n    customPurchase,\n  };\n};\n\nexport const useSellRadioHandler = (\n  radioOption: string,\n  price: string | number | null,\n  setPrice: Dispatch<SetStateAction<string | number | null>>,\n  customSell: any,\n  cryptoPrice: string | number | null,\n  id: string\n) => {\n  const { updateCardHandler } = React.useContext(CardsContext);\n  useEffect(() => {\n    switch (radioOption) {\n      case \"current\":\n        updateCardHandler(id, {\n          purchaseSource: \"current\",\n          sellPrice: cryptoPrice,\n        });\n        break;\n\n      case \"custom\":\n        setPrice(formatNumber(customSell));\n        updateCardHandler(id, {\n          purchaseSource: \"custom\",\n          sellPrice: customSell,\n        });\n        break;\n\n      case \"historic\":\n        break;\n\n      default:\n        setPrice(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [radioOption, price, customSell, cryptoPrice, id]);\n\n  return {\n    radioOption,\n    price,\n    customPurchase: customSell,\n  };\n};\n","import React, {\n  Dispatch,\n  SetStateAction,\n  useState,\n  useEffect,\n  useRef,\n} from \"react\";\nimport { formatNumber, toInt, isTruthy } from \"../../../lib/helpers\";\nimport Tooltip from \"../tooltip\";\nimport CardsContext from \"../../../lib/card-context\";\nimport { useSellRadioHandler } from \"./hooks\";\n\ninterface SellPriceProps {\n  cardData: ICard;\n  showTooltip?: boolean;\n  setShowModal: Dispatch<SetStateAction<boolean>>;\n}\n\nconst SellPrice: React.FC<SellPriceProps> = ({\n  cardData,\n  showTooltip,\n  setShowModal,\n}) => {\n  const [price, setPrice] = useState<string | number | null>(\n    cardData.sellPrice\n  );\n  let defaultRadio = cardData.sellSource || \"\";\n  let defaultCustom =\n    cardData.sellSource === \"custom\" ? cardData.sellPrice : \"\";\n  const [radioOption, setRadioOption] = useState(defaultRadio);\n  const { updateCardHandler } = React.useContext(CardsContext);\n  const [customSell, setCustomSell] = useState<any>(defaultCustom);\n  const [enabled, setEnabled] = useState<boolean>(\n    isTruthy(cardData.purchasePrice)\n  );\n  const [textClass, setTextClass] = useState(\n    `${enabled ? \"\" : \"text__disabled\"}`\n  );\n  let timerRef: any = useRef(null);\n\n  useSellRadioHandler(\n    radioOption,\n    price,\n    setPrice,\n    customSell,\n    cardData.cryptoPrice,\n    cardData.id\n  );\n\n  const radioHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setRadioOption(e.target.value);\n  };\n\n  const customHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value !== \"$\") {\n      let _sellPrice = formatNumber(e.target.value, 6);\n      if (_sellPrice && _sellPrice !== \"0\") {\n        setCustomSell(\"$\" + _sellPrice);\n      } else {\n        setCustomSell(\"\");\n      }\n    } else {\n      setCustomSell(\"\");\n    }\n    clearTimeout(timerRef.current);\n    updateTable(e.target.value);\n  };\n\n  const updateTable = (val: string) => {\n    timerRef.current = setTimeout(() => {\n      setPrice(toInt(val));\n      updateCardHandler(cardData.id, {\n        sellPrice: val,\n      });\n    }, 100);\n  };\n\n  useEffect(() => {\n    setEnabled(isTruthy(cardData.purchasePrice));\n  }, [setEnabled, setTextClass, cardData.purchasePrice]);\n\n  useEffect(() => {\n    setTextClass(`${enabled ? \"\" : \"text__disabled\"}`);\n  }, [enabled, setTextClass]);\n\n  const historicHandler = () => {\n    setRadioOption(\"historic\");\n    setShowModal(true);\n  };\n\n  useEffect(() => {\n    setPrice(cardData.sellPrice);\n  }, [cardData.sellPrice, setPrice]);\n\n  return (\n    <form>\n      <div className={`row margin__top_10 ${textClass}`}>\n        <div>\n          <label>Sell price</label>\n          {price ? (\n            <React.Fragment>\n              <span className=\"card__purchasePrice\">\n                ${formatNumber(cardData.sellPrice, 6)}\n              </span>\n              {radioOption === \"historic\" && cardData.sellDate ? (\n                <span className=\"text__small\"> on {cardData.sellDate}</span>\n              ) : (\n                <span />\n              )}\n            </React.Fragment>\n          ) : (\n            <span className=\"card_SellPrice\"></span>\n          )}\n        </div>\n        <div>\n          {showTooltip && (\n            <Tooltip\n              text=\"Set the sell-price for this cryptocurrency\"\n              className=\"tooltip__container\"\n              showArrow={true}\n              animateArrow={true}\n            />\n          )}\n        </div>\n      </div>\n      <div className={`margin__left_10 ${textClass}`}>\n        <div>\n          <span>\n            <input\n              type=\"radio\"\n              name=\"set-sell\"\n              value=\"current\"\n              checked={radioOption === \"current\"}\n              onChange={radioHandler}\n              disabled={!enabled}\n            />\n          </span>\n          <label\n            className={enabled ? \"link2\" : \"\"}\n            onClick={() => setRadioOption(\"current\")}\n          >\n            Use current price point for selling\n          </label>\n        </div>\n        <div>\n          <span>\n            <input\n              type=\"radio\"\n              name=\"set-sell\"\n              value=\"historic\"\n              checked={radioOption === \"historic\"}\n              onChange={radioHandler}\n              onClick={() => setShowModal(true)}\n              disabled={!enabled}\n            />\n          </span>\n          <label className={enabled ? \"link2\" : \"\"} onClick={historicHandler}>\n            Use price point to sell from date\n          </label>\n        </div>\n        <div>\n          <span>\n            <input\n              type=\"radio\"\n              name=\"set-sell\"\n              value=\"custom\"\n              checked={radioOption === \"custom\"}\n              onChange={radioHandler}\n              disabled={!enabled}\n            />\n          </span>\n          <label\n            className={enabled ? \"link2\" : \"\"}\n            onClick={() => setRadioOption(\"custom\")}\n          >\n            Use custom sell price\n          </label>\n          {radioOption === \"custom\" && enabled && (\n            <span>\n              <input\n                type=\"text\"\n                className=\"input__text_tiny_wider\"\n                onChange={customHandler}\n                value={customSell}\n                disabled={!enabled}\n              />\n            </span>\n          )}\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default SellPrice;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { formatNumber, toInt, isTruthy } from \"../../../lib/helpers\";\nimport Tooltip from \"../tooltip\";\nimport CardsContext from \"../../../lib/card-context\";\n\ninterface InvestmentProps {\n  cardData: ICard;\n  showTooltip?: boolean;\n}\n\nconst Investment: React.FC<InvestmentProps> = ({ cardData, showTooltip }) => {\n  const [investment, setInvestment] = useState<string | number | null>(\n    cardData.investment\n  );\n  const [investmentType, setInvestmentType] = useState(cardData.investmentType);\n  const [lastSavedInput, setLastSavedInput] = useState(cardData.investment);\n  const [coins, setCoins] = useState(cardData.coins);\n  const { updateCardHandler } = React.useContext(CardsContext);\n  let timerRef: any = useRef(null);\n  const [enabled, setEnabled] = useState(\n    Boolean(cardData.cryptoTicker) &&\n      isTruthy(cardData.purchasePrice && isTruthy(cardData.sellPrice))\n  );\n  const [textClass, setTextClass] = useState(\n    `${enabled ? \"\" : \"text__disabled\"}`\n  );\n\n  const radioHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInvestmentType(e.target.value);\n  };\n\n  const labelClick = (t: string) => {\n    setInvestmentType(t);\n  };\n\n  const coinsHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let val = formatNumber(e.target.value, 4);\n    let _investment =\n      parseFloat(e.target.value) * toInt(cardData.purchasePrice);\n    if (val !== \"0\") {\n      setCoins(val.toString());\n      setInvestment(_investment);\n    } else {\n      setCoins(\"\");\n    }\n    clearTimeout(timerRef.current);\n    updateTable(val);\n  };\n\n  const investmentHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let _coins = toInt(\n      toInt(e.target.value) / toInt(cardData.purchasePrice),\n      4\n    );\n    setCoins(_coins);\n    const val = formatNumber(e.target.value, 2);\n    if (val === \"0\") {\n      setInvestment(\"\");\n    } else {\n      setInvestment(val);\n    }\n  };\n\n  const updateTable = (val: string) => {\n    timerRef.current = setTimeout(() => {\n      setLastSavedInput(val);\n    }, 1000);\n  };\n\n  const saveInput = () => {\n    if (lastSavedInput !== investment) {\n      setLastSavedInput(investment);\n    }\n  };\n\n  useEffect(() => {\n    let _investment;\n    _investment = toInt(cardData.purchasePrice) * toInt(coins, 2);\n    updateCardHandler(cardData.id, {\n      investment: _investment,\n      investmentType: investmentType,\n      coins,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    cardData.id,\n    cardData.purchasePrice,\n    investment,\n    investmentType,\n    lastSavedInput,\n    coins,\n  ]);\n\n  useEffect(() => {\n    setEnabled(\n      Boolean(cardData.cryptoTicker) &&\n        isTruthy(cardData.purchasePrice) &&\n        isTruthy(cardData.sellPrice)\n    );\n  }, [\n    setEnabled,\n    cardData.cryptoTicker,\n    cardData.purchasePrice,\n    cardData.sellPrice,\n  ]);\n\n  useEffect(() => {\n    setTextClass(`${enabled ? \"\" : \"text__disabled\"}`);\n  }, [enabled, setTextClass]);\n\n  return (\n    <React.Fragment>\n      <div className={`row margin__top_10 ${textClass}`}>\n        <div>\n          <label>Investment</label>\n        </div>\n        <div>\n          {showTooltip && !isTruthy(investment) && (\n            <Tooltip\n              text=\"Set the $ invested or number of coins purchased\"\n              className=\"tooltip__container\"\n              showArrow={true}\n              animateArrow={true}\n            />\n          )}\n        </div>\n      </div>\n      <div className={`margin__left_10 ${textClass}`}>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"investment-type\"\n            value=\"coins\"\n            checked={investmentType === \"coins\"}\n            disabled={!enabled}\n            onChange={radioHandler}\n          />\n          {enabled ? (\n            <label onClick={() => labelClick(\"coins\")} className=\"link2\">\n              Number of coins purchased\n            </label>\n          ) : (\n            <label className=\"text__disabled\">Number of coins purchased</label>\n          )}\n\n          {investmentType === \"coins\" && (\n            <input\n              type=\"text\"\n              className=\"input__text_tiny\"\n              onChange={coinsHandler}\n              value={coins || \"\"}\n              onBlur={saveInput}\n            />\n          )}\n        </div>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"investment-type\"\n            value=\"dollars\"\n            checked={investmentType === \"dollars\"}\n            disabled={!enabled}\n            onChange={radioHandler}\n          />\n          {enabled ? (\n            <label onClick={() => labelClick(\"dollars\")} className=\"link2\">\n              Total $ amount invested\n            </label>\n          ) : (\n            <label className=\"text__disabled\">Total $ amount invested</label>\n          )}\n\n          {investmentType === \"dollars\" && (\n            <input\n              type=\"text\"\n              className=\"input__text_tiny\"\n              onChange={investmentHandler}\n              value={formatNumber(investment, 2) || \"\"}\n              onBlur={saveInput}\n              disabled={!enabled}\n            />\n          )}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Investment;\n","import React, { useState, useEffect } from \"react\";\nimport { formatNumber, calculateReturn, formatNet } from \"../../../lib/helpers\";\n\ninterface ResultsProps {\n  cardData: ICard;\n}\n\nconst Results: React.FC<ResultsProps> = ({ cardData }) => {\n  const [totalReturn, setTotalReturn] = useState<string | null>(null);\n  const [net, setNet] = useState<number | null | string>(null);\n  const [isProfit, setIsProit] = useState(false);\n  const [formattedCoins, setFormattedCoins] = useState(\n    formatNumber(cardData.coins, 4)\n  );\n  const [enabled, setEnabled] = useState(false);\n\n  useEffect(() => {\n    const _return = calculateReturn(cardData.coins, cardData.sellPrice);\n    setFormattedCoins(formatNumber(cardData.coins, 4));\n    if (cardData.coins && cardData.investment) {\n      let _net = formatNet(cardData.investment, _return);\n      if (_net) {\n        setIsProit(_net >= \"0\");\n        setNet(formatNumber(_net, 2));\n      } else if (_net === \"0\") {\n        setIsProit(_net >= \"0\");\n        setNet(formatNumber(_net, 2));\n      }\n      setTotalReturn(_return);\n      setEnabled(true);\n    } else {\n      setEnabled(false);\n    }\n  }, [\n    cardData.coins,\n    cardData.investment,\n    cardData.sellPrice,\n    cardData.purchasePrice,\n    setTotalReturn,\n  ]);\n\n  return (\n    <div className=\"results__container\">\n      {enabled && (\n        <div className=\"table\">\n          <div className=\"table__row\">\n            <div />\n            <div\n              className=\"table__row_result results__header\"\n              id=\"results__header\"\n            >\n              Results\n            </div>\n          </div>\n          <div className=\"table__row\">\n            <div>Crypto: </div>\n            <div className=\"table__row_right\">{cardData.cryptoName}</div>\n          </div>\n\n          <div className=\"table__row\">\n            <div>Coins owned: </div>\n            {formattedCoins && formattedCoins !== \"0\" && (\n              <div className=\"table__row_right\">\n                <span className=\"fadeIn\">\n                  {formattedCoins}\n                  <br />@{cardData.purchasePrice} per coin\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className=\"table__row\">\n            <div>&nbsp;</div>\n            <div />\n          </div>\n\n          <div className=\"table__row\">\n            <div>Total return: </div>\n            <div className=\"table__row_right\">\n              {totalReturn && (\n                <span className=\"fadeIn\">${formatNumber(totalReturn)}</span>\n              )}\n            </div>\n          </div>\n\n          <div className=\"table__row  table__row_last\">\n            <div>- Amount Invested: </div>\n            <div className=\"table__row_right\">\n              {cardData.investment && (\n                <span className=\"fadeIn\">\n                  ${formatNumber(cardData.investment, 2)}\n                </span>\n              )}\n            </div>\n          </div>\n\n          <div className=\"table__row\">\n            <div>= Net return: </div>\n            <div className=\"table__row_right\">\n              {net && (\n                <span className={isProfit ? \"net__profit\" : \"net__loss  \"}>\n                  ${net}\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Results;\n","import React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-date-picker\";\nimport { formatNumber, formatDate } from \"../../../lib/helpers\";\nimport api from \"../../../lib/api\";\n\ninterface HistoricPriceProps {\n  cryptoTicker: string;\n  cryptoName: string;\n  cryptoPrice?: string | number | null | undefined;\n  clickHandler: (item: string, date: string) => void;\n}\n\nconst HistoricPrice: React.FC<HistoricPriceProps> = ({\n  cryptoTicker,\n  cryptoName,\n  cryptoPrice,\n  clickHandler,\n}) => {\n  const [dateValue, setDateValue] = useState(new Date());\n  const [historicPrice, setHistoricPrice] = useState<\n    string | number | null | undefined\n  >(formatNumber(cryptoPrice, 4));\n  const [hpClassname, setHpClassname] = useState(\"fadeIn\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [historicDate, setHistoricDate] = useState(\"\");\n\n  const setPrice = () => {\n    let p = historicPrice ? historicPrice.toString() : \"\";\n    clickHandler(p, historicDate);\n  };\n\n  const changeHandler = (date: Date) => {\n    if (cryptoPrice) {\n      setHpClassname(\"fadeOut\");\n      setDateValue(date);\n      setIsLoading(true);\n    }\n  };\n\n  useEffect(() => {\n    const getItem = async () => {\n      const timestamp = (dateValue.getTime() / 1000).toString();\n      const data = await api.fetchItem(cryptoTicker, timestamp);\n      const price = data[cryptoTicker.toUpperCase()].USD;\n      setHistoricPrice(formatNumber(price, 4));\n      setIsLoading(false);\n      setHpClassname(\"fadeIn\");\n      setHistoricDate(formatDate(dateValue));\n    };\n    if (isLoading) {\n      getItem();\n    }\n  }, [isLoading, cryptoTicker, dateValue, setIsLoading, setHpClassname]);\n\n  return (\n    <div className=\"historic__modal\">\n      <div\n        className=\"padding__top_5 padding__left_5\"\n        style={{ float: \"right\" }}\n      >\n        <img\n          src={`${process.env.PUBLIC_URL}/images/crypto-icons/${cryptoTicker}.png`}\n          alt={cryptoName}\n          className=\"crypto__image\"\n        />\n        <span>\n          {cryptoName} - {cryptoTicker}\n        </span>\n        {historicPrice && (\n          <span\n            className={`historic__modal_displayDate ${hpClassname} link3`}\n            onClick={setPrice}\n          >\n            ${historicPrice}\n          </span>\n        )}\n      </div>\n      <div>\n        <div>\n          <DatePicker\n            onChange={changeHandler}\n            value={dateValue}\n            autoFocus={true}\n            isOpen={true}\n            maxDate={new Date()}\n            closeCalendar={false}\n          />\n\n          <div className=\"historic__display_price\">\n            {isLoading ? (\n              <div>Loading</div>\n            ) : (\n              <React.Fragment>\n                {historicPrice && (\n                  <div>\n                    <div>\n                      Price of ${cryptoName} on {historicDate}: {historicPrice}\n                    </div>\n                    <div\n                      className={`historic__displayPrice ${hpClassname} link3`}\n                      onClick={setPrice}\n                      style={{ fontWeight: \"bold\" }}\n                    >\n                      Click to use this price point\n                    </div>\n                  </div>\n                )}\n              </React.Fragment>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HistoricPrice;\n","import React, { useState, useEffect } from \"react\";\nimport DeleteCard from \"./DeleteCard\";\nimport Modal from \"../modal\";\nimport CryptoList from \"../crypto-list\";\nimport CardsContext from \"../../../lib/card-context\";\nimport SelectCrypto from \"./SelectCrypto\";\nimport PurchasePrice from \"./PurchasePrice\";\nimport SellPrice from \"./SellPrice\";\nimport Investment from \"./Investment\";\nimport Results from \"./Results\";\nimport HistoricPrice from \"./HistoricPrice\";\nimport { isTruthy } from \"../../../lib/helpers\";\n\n// const stepsToComplete = [\"set-crypto\", \"set-purchase-price\"];\n\ninterface CardProps {\n  cardData: ICard;\n  num: number;\n}\n\nconst Card: React.FC<CardProps> = ({ cardData, num }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [showPriceHistoricModal, setShowPriceHistoricModal] = useState(false);\n  const [showSellHistoricModal, setSellPriceHistoricModal] = useState(false);\n  const { updateCardHandler } = React.useContext(CardsContext);\n  const [incompletedStep, setIncompletedStep] = useState(\"\");\n\n  const closeModalHandler = () => {\n    setShowModal(false);\n    setShowPriceHistoricModal(false);\n    setSellPriceHistoricModal(false);\n  };\n\n  const cryptoClickHandler = (\n    ticker: string,\n    fullName: string | null,\n    cryptoPrice: string | null | number\n  ) => {\n    updateCardHandler(cardData.id, {\n      cryptoName: fullName,\n      cryptoTicker: ticker,\n      cryptoPrice,\n    });\n    setShowModal(false);\n  };\n\n  const historicPriceClickHandler = (\n    historicPrice: string,\n    historicDate: string\n  ) => {\n    setShowPriceHistoricModal(false);\n    updateCardHandler(cardData.id, {\n      purchasePrice: historicPrice,\n      purchaseSource: \"historic\",\n      purchaseDate: historicDate,\n    });\n  };\n\n  const historicSellClickHandler = (\n    historicPrice: string,\n    sellDate: string\n  ) => {\n    setSellPriceHistoricModal(false);\n    updateCardHandler(cardData.id, {\n      sellPrice: historicPrice,\n      sellSource: \"historic\",\n      sellDate,\n    });\n  };\n\n  useEffect(() => {\n    let step = \"set-crypto\";\n    if (cardData.cryptoTicker) {\n      step = \"set-purchase-price\";\n    }\n    if (isTruthy(cardData.purchasePrice)) {\n      step = \"set-sell-price\";\n    }\n    if (isTruthy(cardData.sellPrice)) {\n      step = \"set-investment\";\n    }\n    setIncompletedStep(step);\n  }, [cardData.cryptoTicker, cardData.purchasePrice, cardData.sellPrice]);\n\n  return (\n    <div className=\"card__row\">\n      {showModal && (\n        <Modal\n          title={`Set crytpo`}\n          className=\"crypto__list_modal\"\n          closeOnOutsideClick={true}\n          onClose={closeModalHandler}\n        >\n          <CryptoList clickHandler={cryptoClickHandler} />\n        </Modal>\n      )}\n      {showPriceHistoricModal && (\n        <Modal\n          title={`Base price of ${cardData.cryptoName} from a specific date`}\n          className=\"historic__modal_popup\"\n          closeOnOutsideClick={true}\n          onClose={closeModalHandler}\n        >\n          <HistoricPrice\n            cryptoTicker={cardData.cryptoTicker}\n            cryptoName={cardData.cryptoName}\n            cryptoPrice={cardData.cryptoPrice}\n            clickHandler={historicPriceClickHandler}\n          />\n        </Modal>\n      )}\n      {showSellHistoricModal && (\n        <Modal\n          title={`Base sell price of ${cardData.cryptoName} from a specific date`}\n          className=\"historic__modal_popup\"\n          closeOnOutsideClick={true}\n          onClose={closeModalHandler}\n        >\n          <HistoricPrice\n            cryptoTicker={cardData.cryptoTicker}\n            cryptoName={cardData.cryptoName}\n            cryptoPrice={cardData.cryptoPrice}\n            clickHandler={historicSellClickHandler}\n          />\n        </Modal>\n      )}\n      <div className=\"card__container\">\n        <DeleteCard cardId={cardData.id} enabled={num > 0} />\n        <SelectCrypto\n          cardData={cardData}\n          setShowModal={setShowModal}\n          showTooltip={incompletedStep === \"set-crypto\"}\n        />\n        <PurchasePrice\n          cardData={cardData}\n          showTooltip={incompletedStep === \"set-purchase-price\"}\n          setShowModal={setShowPriceHistoricModal}\n        />\n        <SellPrice\n          cardData={cardData}\n          showTooltip={incompletedStep === \"set-sell-price\"}\n          setShowModal={setSellPriceHistoricModal}\n        />\n        <Investment\n          cardData={cardData}\n          showTooltip={incompletedStep === \"set-investment\"}\n        />\n      </div>\n      <div className=\"card__results\">\n        <Results cardData={cardData} />\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\n\ninterface SaveCardsProps {\n  saveCardsHandler: () => void;\n  active: boolean;\n  resetShouldUpdate: () => void;\n}\n\nconst SaveCards: React.FC<SaveCardsProps> = ({\n  saveCardsHandler,\n  active,\n  resetShouldUpdate,\n}) => {\n  const [isSaving, setIsSaving] = useState(false);\n  const [className, setClassName] = useState(\"saveCards saveCards__inactive\");\n  const [text, setText] = useState(\"Save Cards\");\n\n  const clickHandler = () => {\n    saveCardsHandler();\n    setIsSaving(true);\n    setTimeout(() => {\n      setIsSaving(false);\n      resetShouldUpdate();\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (isSaving) {\n      setText(\"Saving cards...\");\n      setClassName(\"saveCards saveCards__saving\");\n    } else {\n      setText(\"Save Cards\");\n      setClassName(\"saveCards saveCards__inactive\");\n    }\n  }, [isSaving]);\n\n  useEffect(() => {\n    if (active) {\n      setClassName(\"saveCards saveCards__active fuckkkk\");\n    }\n  }, [active]);\n\n  return (\n    <div>\n      <div className={className} onClick={clickHandler}>\n        <span>{text}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default SaveCards;\n","import React, { useState, useMemo, useRef } from \"react\";\nimport Card from \"../card\";\nimport { initialCards } from \"../../../lib/helpers\";\nimport { defaultCard } from \"../../../models/default-card\";\nimport CardsContext from \"../../../lib/card-context\";\nimport { storage } from \"../../../lib/helpers\";\nimport SaveCards from \"./SaveCards\";\n\ninterface IMergeObject {\n  cryptoName: string;\n  cryptoPrice: string | null | number;\n  cryptoTicker: string;\n}\n\nconst initialTime = Date.now() / 1000;\n\nconst Cards: React.FC<{}> = () => {\n  const [cards, setCards] = useState<ICard[]>(storage.get() || initialCards);\n  const [previousUpdate, setPreviousUpdate] = useState<string>();\n  const [cardId, setUpdateCardId] = useState(\"\");\n  const [mergeObject, setMergeObject] = useState<IMergeObject>();\n  const [shouldUpdate, setShouldUpdate] = useState(false);\n  const divRef = useRef<HTMLDivElement>(null);\n\n  const updateCardHandler = (_cardId: string, _mergeObject: IMergeObject) => {\n    let _next = JSON.stringify(_mergeObject);\n    if (_next !== previousUpdate) {\n      setPreviousUpdate(JSON.stringify(_mergeObject));\n      setMergeObject(_mergeObject);\n      setUpdateCardId(_cardId);\n      let secondsPast = Date.now() / 1000 - initialTime;\n      if (secondsPast > 4) {\n        setShouldUpdate(true);\n      }\n    }\n  };\n\n  const resetShouldUpdate = () => {\n    setShouldUpdate(false);\n  };\n\n  const deleteCard = (_cardId: string) => {\n    const idx = cards.findIndex((cardItem) => cardItem.id === _cardId);\n    if (idx > -1) {\n      const _cards = [...cards];\n      _cards.splice(idx, 1);\n      setCards(_cards);\n    }\n  };\n\n  // update the cards\n  useMemo(() => {\n    const idx = cards.findIndex((cardItem) => cardItem.id === cardId);\n    const _cards = [...cards];\n    _cards[idx] = {\n      ..._cards[idx],\n      ...mergeObject,\n    };\n    setCards(_cards);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cardId, mergeObject]);\n\n  const addCardHandler = () => {\n    const newCard = { ...defaultCard };\n    newCard.id = Date.now().toString();\n    const _cards = [...cards];\n    _cards[_cards.length] = newCard;\n    setCards(_cards);\n  };\n\n  const providerValue = {\n    updateCardHandler,\n    deleteCard,\n  };\n\n  const saveCards = () => {\n    storage.save(cards);\n  };\n\n  return (\n    <CardsContext.Provider value={providerValue}>\n      <div ref={divRef}>\n        {cards.map((cardItem, n) => (\n          <Card cardData={cardItem} key={cardItem.id} num={n} />\n        ))}\n        <div className=\"row padding__bottom_40\">\n          <div className=\"link2\" onClick={addCardHandler}>\n            + Add a calculator card\n          </div>\n          <SaveCards\n            saveCardsHandler={saveCards}\n            active={shouldUpdate}\n            resetShouldUpdate={resetShouldUpdate}\n          />\n        </div>\n      </div>\n    </CardsContext.Provider>\n  );\n};\n\nexport default Cards;\n","import React from \"react\";\nimport { ReactComponent as LogoImg } from \"./logo.svg\";\n\nconst Logo = () => (\n  <div>\n    <LogoImg className=\"logo\" />\n  </div>\n);\n\nexport default Logo;\n","import React from \"react\";\nimport Logo from \"../logo\";\n\nconst AppHeader = () => {\n  return (\n    <div className=\"app__header_container\">\n      <Logo />\n      <div className=\"app__header_text\">\n        <div>Crypto Profit Calculator</div>\n        <div>Calculate ROI on most major crypto currencies</div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import React from \"react\";\nimport Cards from \"../../../components/elements/cards\";\nimport AppHeader from \"../../../components/elements/app-header\";\n\nconst App = () => {\n  return (\n    <div className=\"app__container\">\n      <AppHeader />\n      <Cards />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./models/pages/App\";\nimport \"./css/style.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}