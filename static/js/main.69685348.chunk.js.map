{"version":3,"sources":["components/elements/logo/logo.svg","lib/card-context.ts","components/elements/card/DeleteCard.tsx","components/elements/portal/Portal.tsx","components/elements/modal/Modal.tsx","components/elements/crypto-list/CryptoListHeaders.tsx","models/cryptos.ts","components/elements/spinner/Spinner.tsx","lib/api.ts","models/default-card.ts","lib/helpers.ts","components/elements/crypto-list/CryptoList.tsx","components/elements/tooltip/Tooltip.tsx","components/elements/card/SelectCrypto.tsx","components/elements/card/PurchasePrice.tsx","components/elements/card/hooks.tsx","components/elements/card/SellPrice.tsx","components/elements/card/Investment.tsx","components/elements/card/Results.tsx","components/elements/card/HistoricPrice.tsx","components/elements/card/Card.tsx","components/elements/cards/SaveCards.tsx","components/elements/cards/Cards.tsx","components/elements/logo/Logo.tsx","components/elements/app-header/AppHeader.tsx","models/pages/App/App.tsx","index.tsx"],"names":["_g","initialValues","updateCardHandler","cardId","mergeObject","deleteCard","CardContext","React","createContext","DeleteCard","className","enabled","useContext","CardsContext","onClick","Portal","children","parent","el","useMemo","document","createElement","useEffect","target","appendChild","body","classList","split","forEach","item","push","add","removeChild","ReactDOM","createPortal","Modal","title","closeOnOutsideClick","onClose","divRef","useRef","useState","classNames","e","htmlElement","current","contains","ref","CryptoListHeaders","cryptoCurrencies","AAVE","fullName","currentPrice","ticker","marketCap","change","ADA","ALGO","BTC","BCH","DAI","DOGE","DOT","ETH","LINK","LTC","MATIC","SHIBU","SOLANA","UNI","XLM","XTZ","Spinner","fill","width","height","_fill","_width","_height","version","id","xmlns","x","y","viewBox","enableBackground","d","attributeType","attributeName","type","from","to","dur","repeatCount","apiUrl","api","get","tickers","a","tickersString","join","endpoint","headers","fetch","then","response","json","data","catch","error","fetchItem","timestamp","toUpperCase","defaultCard","Date","now","toString","cryptoName","cryptoTicker","cryptoPrice","purchasePrice","purchaseDate","sellPrice","sellDate","purchaseSource","sellSource","investment","investmentType","coins","initialCards","formatNumber","arg","retval","maxDecimals","s","endsInDecimal","length","numberArray","preDecimal","replaceAll","postDecimal","max","substring","parseInt","toLocaleString","toInt","_str","parseFloat","toFixed","isTruthy","storage","items","window","localStorage","setItem","JSON","stringify","getItem","parse","CrytpoList","clickHandler","isLoading","setIsLoading","cryptoList","setCryptoList","cryptos","getApi","_cryptoList","Object","keys","map","key","objects","DISPLAY","obj","USD","hasOwnProperty","PRICE","CHANGE24HOUR","MKTCAP","Fragment","undefined","_crypto","src","process","alt","Tooltip","text","animateArrow","showArrow","_className","_arrowClassname","SelectCrypto","cardData","setShowModal","showTooltip","Boolean","setEnabled","textClass","setTextClass","style","paddingTop","PurchasePrice","price","setPrice","timerRef","setTimeout","clearTimeout","usePrice","defaultRadio","defaultCustom","radioOption","setRadioOption","customPrice","setCustomPrice","customPurchase","useRadioHandler","radioHandler","value","updateTable","val","name","checked","onChange","disabled","_purchasePrice","SellPrice","customSell","setCustomSell","useSellRadioHandler","_sellPrice","Investment","setInvestment","setInvestmentType","lastSavedInput","setLastSavedInput","setCoins","labelClick","t","saveInput","_investment","onBlur","_coins","Results","totalReturn","setTotalReturn","net","setNet","isProfit","setIsProit","formattedCoins","setFormattedCoins","_return","_c","_p","calculateReturn","_net","initialInvestment","i","formatNet","HistoricPrice","dateValue","setDateValue","historicPrice","setHistoricPrice","hpClassname","setHpClassname","historicDate","setHistoricDate","p","getTime","toLocaleDateString","float","date","autoFocus","isOpen","maxDate","closeCalendar","fontWeight","Card","num","showModal","showPriceHistoricModal","setShowPriceHistoricModal","showSellHistoricModal","setSellPriceHistoricModal","incompletedStep","setIncompletedStep","closeModalHandler","step","CryptoList","SaveCards","saveCardsHandler","active","resetShouldUpdate","isSaving","setIsSaving","setClassName","setText","initialTime","Cards","cards","setCards","previousUpdate","setPreviousUpdate","setUpdateCardId","setMergeObject","shouldUpdate","setShouldUpdate","idx","findIndex","cardItem","_cards","providerValue","_cardId","_mergeObject","splice","Provider","n","newCard","_excluded","_extends","assign","arguments","source","prototype","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","titleId","props","xmlnsXlink","xmlSpace","ForwardRef","Logo","AppHeader","App","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.69685348.chunk.js","sourcesContent":["var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 470 470\",\n    style: {\n      enableBackground: \"new 0 0 470 470\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M357.25,210h-62c-4.143,0-7.5,3.357-7.5,7.5v30c0,4.143,3.357,7.5,7.5,7.5h62c4.143,0,7.5-3.357,7.5-7.5v-30 C364.75,213.357,361.393,210,357.25,210z M349.75,240h-47v-15h47V240z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M174,357.5h-61.25c-4.142,0-7.5,3.357-7.5,7.5v57.5c0,4.143,3.358,7.5,7.5,7.5H174c4.142,0,7.5-3.357,7.5-7.5V365 C181.5,360.857,178.142,357.5,174,357.5z M166.5,415h-46.25v-42.5h46.25V415z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M265.25,357.5H204c-4.142,0-7.5,3.357-7.5,7.5v57.5c0,4.143,3.358,7.5,7.5,7.5h61.25c4.143,0,7.5-3.357,7.5-7.5V365 C272.75,360.857,269.393,357.5,265.25,357.5z M257.75,415H211.5v-42.5h46.25V415z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M174,270h-61.25c-4.142,0-7.5,3.357-7.5,7.5V335c0,4.143,3.358,7.5,7.5,7.5H174c4.142,0,7.5-3.357,7.5-7.5v-57.5 C181.5,273.357,178.142,270,174,270z M166.5,327.5h-46.25V285h46.25V327.5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M265.25,270H204c-4.142,0-7.5,3.357-7.5,7.5V335c0,4.143,3.358,7.5,7.5,7.5h61.25c4.143,0,7.5-3.357,7.5-7.5v-57.5 C272.75,273.357,269.393,270,265.25,270z M257.75,327.5H211.5V285h46.25V327.5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M357.25,270h-62c-4.143,0-7.5,3.357-7.5,7.5v145c0,4.143,3.357,7.5,7.5,7.5h62c4.143,0,7.5-3.357,7.5-7.5v-50 c0-4.143-3.357-7.5-7.5-7.5s-7.5,3.357-7.5,7.5V415h-47V285h47v57.5c0,4.143,3.357,7.5,7.5,7.5s7.5-3.357,7.5-7.5v-65 C364.75,273.357,361.393,270,357.25,270z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M367.25,0h-264.5c-20.678,0-37.5,16.822-37.5,37.5v395c0,20.678,16.822,37.5,37.5,37.5h264.5 c20.678,0,37.5-16.822,37.5-37.5v-395C404.75,16.822,387.928,0,367.25,0z M389.75,432.5c0,12.406-10.094,22.5-22.5,22.5h-264.5 c-12.407,0-22.5-10.094-22.5-22.5v-395c0-12.406,10.093-22.5,22.5-22.5h264.5c12.406,0,22.5,10.094,22.5,22.5V432.5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M357.25,40H113.5c-4.142,0-7.5,3.357-7.5,7.5v90c0,4.143,3.358,7.5,7.5,7.5h243.75c4.143,0,7.5-3.357,7.5-7.5v-90 C364.75,43.357,361.393,40,357.25,40z M121,55h94.393l-75,75H121V55z M349.75,130H221.607l21.59-21.59 c2.929-2.93,2.929-7.678,0-10.607c-2.93-2.928-7.679-2.927-10.607,0L200.393,130h-38.786l75-75h38.785l-21.59,21.59 c-2.929,2.93-2.929,7.678,0,10.607c1.465,1.464,3.385,2.196,5.304,2.196s3.839-0.732,5.304-2.196L296.607,55h53.143V130z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M357.25,170H204c-4.142,0-7.5,3.357-7.5,7.5s3.358,7.5,7.5,7.5h153.25c4.143,0,7.5-3.357,7.5-7.5S361.393,170,357.25,170z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M174,170h-60.5c-4.142,0-7.5,3.357-7.5,7.5s3.358,7.5,7.5,7.5H174c4.142,0,7.5-3.357,7.5-7.5S178.142,170,174,170z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.c236a3e2.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\n\ninterface ICardContext {\n  updateCardHandler: (cardId: string, mergeObject: any) => void;\n  deleteCard: (cardId: string) => void;\n}\n\nconst initialValues: ICardContext = {\n  updateCardHandler: (cardId: string, mergeObject: any) => {},\n  deleteCard: (cardId: string) => {},\n};\n\nconst CardContext = React.createContext<ICardContext>(initialValues);\n\nexport default CardContext;\n","import React from \"react\";\nimport CardsContext from \"../../../lib/card-context\";\n\ninterface DeleteCardProps {\n  cardId: string;\n  enabled: boolean;\n}\nconst DeleteCard: React.FC<DeleteCardProps> = ({ cardId, enabled }) => {\n  const className = enabled ? \"card__delete_enabled\" : \"card__delete_disabled\";\n  const { deleteCard } = React.useContext(CardsContext);\n\n  return (\n    <div\n      className={`card__delete ${className}`}\n      onClick={() => deleteCard(cardId)}\n    >\n      <span className=\"card__delete_text\">&times;</span>\n    </div>\n  );\n};\n\nexport default DeleteCard;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface PortalProps {\n  children: React.ReactNode,\n  parent?: HTMLElement | null,\n  className?: string\n}\n\nconst Portal:React.FC<PortalProps> = ({ children, parent, className }) => {\n  // Create div to contain everything\n  const el = React.useMemo(() => document.createElement(\"div\"), []);\n  // On mount function\n  React.useEffect(() => {\n    // work out target in the DOM based on parent prop\n    const target = parent && parent.appendChild ? parent : document.body;\n    // Default classes\n    const classList = [\"portal-container\"];\n    // If className prop is present add each class the classList\n    if (className) className.split(\" \").forEach((item) => classList.push(item));\n    classList.forEach((item) => el.classList.add(item));\n    // Append element to dom\n    target.appendChild(el);\n    // On unmount function\n    return () => {\n      // Remove element from dom\n      target.removeChild(el);\n    };\n  }, [el, parent, className]);\n  // return the createPortal function\n  return ReactDOM.createPortal(children, el);\n}\n\nexport default Portal;","import React, { useRef, useState } from \"react\";\nimport Portal from \"../portal\";\n\ninterface ModalProps {\n  title: string;\n  children?: React.ReactNode;\n  closeOnOutsideClick?: boolean;\n  onClose: () => void;\n  className?: string;\n}\n\nconst Modal: React.FC<ModalProps> = ({\n  title,\n  children,\n  closeOnOutsideClick,\n  onClose,\n  className,\n}) => {\n  const divRef = useRef<HTMLDivElement>(null);\n  const [classNames] = useState(`modal__popup ${className}`);\n\n  const onClickHandler = (e: React.MouseEvent<HTMLDivElement>) => {\n    const htmlElement = e.target as HTMLDivElement;\n    if (\n      divRef.current &&\n      !divRef.current.contains(htmlElement) &&\n      closeOnOutsideClick\n    ) {\n      if (onClose) {\n        onClose();\n      }\n    }\n  };\n\n  return (\n    <Portal>\n      <div className=\"modal__container\" onClick={onClickHandler}>\n        <div className={classNames} ref={divRef}>\n          <div className=\"modal__popup_title_bar\">\n            <div className=\"modal__popup_title\">{title}</div>\n          </div>\n          {children}\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nconst CryptoListHeaders = () => {\n  return <div className='row crypto__list'>\n    <div className='crypto__list_header'>Name</div>\n    <div className='crypto__list_header'>Price</div>\n    <div className='crypto__list_header'>Change</div>\n    <div className='crypto__list_header'>Market cap</div>\n  </div> \n}\n\nexport default CryptoListHeaders;","export const cryptoCurrencies: ICryptoList = {\n  AAVE: {\n    fullName: \"Aave\",\n    currentPrice: null,\n    ticker: \"aave\",\n    marketCap: null,\n    change: null,\n  },\n  ADA: {\n    fullName: \"Cardano\",\n    currentPrice: \"\",\n    ticker: \"ada\",\n    marketCap: null,\n    change: null,\n  },\n  ALGO: {\n    fullName: \"Algorand\",\n    currentPrice: \"\",\n    ticker: \"algo\",\n    marketCap: null,\n    change: null,\n  },\n  BTC: {\n    fullName: \"Bitcoin\",\n    currentPrice: \"\",\n    ticker: \"btc\",\n    marketCap: null,\n    change: null,\n  },\n  BCH: {\n    fullName: \"Bitcoin Cash\",\n    currentPrice: null,\n    ticker: \"bch\",\n    marketCap: null,\n    change: null,\n  },\n  DAI: {\n    fullName: \"Dai\",\n    currentPrice: null,\n    ticker: \"dai\",\n    marketCap: null,\n    change: null,\n  },\n  DOGE: {\n    fullName: \"Doge\",\n    currentPrice: null,\n    ticker: \"doge\",\n    marketCap: null,\n    change: null,\n  },\n  DOT: {\n    fullName: \"Polkadot\",\n    currentPrice: null,\n    ticker: \"dot\",\n    marketCap: null,\n    change: null,\n  },\n  ETH: {\n    fullName: \"Ethereum\",\n    currentPrice: null,\n    ticker: \"eth\",\n    marketCap: null,\n    change: null,\n  },\n  LINK: {\n    fullName: \"Chainlink\",\n    currentPrice: null,\n    ticker: \"link\",\n    marketCap: null,\n    change: null,\n  },\n  LTC: {\n    fullName: \"Litecoin\",\n    currentPrice: null,\n    ticker: \"ltc\",\n    marketCap: null,\n    change: null,\n  },\n  MATIC: {\n    fullName: \"Polygon\",\n    currentPrice: null,\n    ticker: \"matic\",\n    marketCap: null,\n    change: null,\n  },\n  SHIBU: {\n    fullName: \"Shibu\",\n    currentPrice: null,\n    ticker: \"shib\",\n    marketCap: null,\n    change: null,\n  },\n  SOLANA: {\n    fullName: \"Solana\",\n    currentPrice: null,\n    ticker: \"sol\",\n    marketCap: null,\n    change: null,\n  },\n  UNI: {\n    fullName: \"Uniswap\",\n    currentPrice: null,\n    ticker: \"uni\",\n    marketCap: null,\n    change: null,\n  },\n  XLM: {\n    fullName: \"Stellar Lumens\",\n    currentPrice: null,\n    ticker: \"xlm\",\n    marketCap: null,\n    change: null,\n  },\n  XTZ: {\n    fullName: \"Tezos\",\n    currentPrice: null,\n    ticker: \"xtz\",\n    marketCap: null,\n    change: null,\n  },\n};\n","import React from \"react\";\n\ninterface SpinnerProps {\n  fill?: string;\n  width?: string;\n  height?: string;\n}\n\nconst Spinner: React.FC<SpinnerProps> = ({ fill, width, height }) => {\n  const _fill = fill || \"#ccc\";\n  const _width = width ? `${width}px` : \"25px\";\n  const _height = height ? `${height}px` : \"25px\";\n\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"loader-1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      width={_width}\n      height={_height}\n      viewBox=\"0 0 50 50\"\n      enableBackground=\"new 0 0 50 50;\"\n    >\n      <path\n        fill={_fill}\n        d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\"\n      >\n        <animateTransform\n          attributeType=\"xml\"\n          attributeName=\"transform\"\n          type=\"rotate\"\n          from=\"0 25 25\"\n          to=\"360 25 25\"\n          dur=\"0.6s\"\n          repeatCount=\"indefinite\"\n        />\n      </path>\n    </svg>\n  );\n};\n\nexport default Spinner;\n","const apiUrl = \"https://min-api.cryptocompare.com/data\";\nexport const apiKey =\n  \"99aaa4bb27142e523129deada04160b07969ece51d99f154f9b1dc1befaa73c9\";\n\nconst api = {\n  get: async (tickers: string[]) => {\n    let tickersString = tickers.join(\",\");\n    const endpoint = `${apiUrl}/pricemultifull?fsyms=${tickersString}&tsyms=USD&extraParams=CryptoCalculator&ts=1605549600`;\n    const headers: object = {\n      \"Content-Type\": \"application-json\",\n    };\n    return fetch(endpoint, headers)\n      .then((response) => response.json())\n      .then((data) => data)\n      .catch((error: string) => {\n        return { error };\n      });\n  },\n  fetchItem: async (ticker: string, timestamp?: string) => {\n    const endpoint = timestamp\n      ? `${apiUrl}/pricehistorical?fsym=${ticker.toUpperCase()}&tsyms=USD&ts=${timestamp}&extraParams=CryptoCalculator`\n      : `${apiUrl}/price?fsym=${ticker.toUpperCase()}&tsyms=USD&extraParams=CryptoCalculator`;\n    const headers: object = {\n      \"Content-Type\": \"application-json\",\n    };\n    return fetch(endpoint, headers)\n      .then((response) => response.json())\n      .then((data) => data)\n      .catch((error) => {\n        return { error };\n      });\n  },\n};\n\nexport default api;\n","export const defaultCard: ICard = {\n  id: Date.now().toString(),\n  cryptoName: \"\",\n  cryptoTicker: \"\",\n  cryptoPrice: \"\",\n  purchasePrice: null,\n  purchaseDate: null,\n  sellPrice: null,\n  sellDate: null,\n  purchaseSource: \"\",\n  sellSource: \"\",\n  investment: null,\n  investmentType: null,\n  coins: null,\n};\n","import { defaultCard } from \"../models/default-card\";\n\nexport const initialCards: ICard[] = [defaultCard];\n\nexport const formatNumber = (\n  arg: string | number | null | undefined,\n  maxDecimals: number = 2\n) => {\n  let s = arg?.toString();\n  let retval;\n  if (s) {\n    const endsInDecimal = s[s.length - 1] === \".\";\n    let numberArray = s.split(\".\");\n    let preDecimal = numberArray[0].replaceAll(/[^0-9-]/g, \"\");\n    let postDecimal = numberArray.length > 1 ? numberArray[1] : \"\";\n    let max = maxDecimals;\n    if (postDecimal.length > max) {\n      postDecimal = postDecimal.substring(0, max);\n    }\n    if (postDecimal) {\n      postDecimal = \".\" + postDecimal;\n    }\n    if (endsInDecimal) {\n      postDecimal = \".\";\n    }\n    preDecimal = parseInt(preDecimal, 10).toLocaleString(\"en-US\");\n    retval = preDecimal + postDecimal;\n  } else {\n    retval = \"0\";\n  }\n  if (retval === \"NaN\") {\n    return \"\";\n  }\n  return retval;\n};\n\nexport const formatNet = (\n  initialInvestment: string | number | null,\n  totalReturn: string | number | null\n) => {\n  if (initialInvestment && totalReturn) {\n    let i = parseFloat(initialInvestment.toString().replaceAll(/[^0-9.]/g, \"\"));\n    let t = parseFloat(totalReturn.toString().replaceAll(/[^0-9.]/g, \"\"));\n    return t - i;\n  }\n  return null;\n};\n\nexport const toInt = (s: any, d?: number): any => {\n  if (s) {\n    let _str = s.toString().replaceAll(/[^0-9.]/gi, \"\");\n    if (d) {\n      return parseFloat(_str).toFixed(d);\n    }\n    return parseFloat(_str);\n  } else {\n    return 0;\n  }\n};\n\nexport const calculateReturn = (coins: any, sellPrice: any) => {\n  if (coins && sellPrice) {\n    let _c = toInt(coins);\n    let _p = toInt(sellPrice);\n    let r = formatNumber(_c * _p);\n    return r;\n  } else {\n    return null;\n  }\n};\n\nexport const isTruthy = (item: any) => {\n  if (!item) {\n    return false;\n  }\n  if (item === 0) {\n    return false;\n  } else if (item === \"0\") {\n    return false;\n  }\n  return true;\n};\n\nexport const storage = {\n  save: (items: any) => {\n    window.localStorage.setItem(\"cards\", JSON.stringify(items));\n  },\n  get: () => {\n    let items = window.localStorage.getItem(\"cards\");\n    if (items) {\n      return JSON.parse(items);\n    }\n  },\n};\n\nexport const toTimestamp = (date: string) => {\n  var datum = Date.parse(date);\n  return datum / 1000;\n};\n\nexport const formatDate = (date: Date) => {\n  return date.toLocaleDateString(\"en-US\");\n};\n","import React, { useState, useEffect } from \"react\";\nimport CrtypoListHeaders from \"./CryptoListHeaders\";\nimport { cryptoCurrencies } from \"../../../models/cryptos\";\nimport Spinner from \"../spinner\";\nimport api from \"../../../lib/api\";\nimport { formatNumber } from \"../../../lib/helpers\";\n\ninterface CryptoListProps {\n  clickHandler: (\n    ticker: string,\n    fullName: string | null,\n    currentPrice: string | null | number\n  ) => void;\n}\n\nconst CrytpoList: React.FC<CryptoListProps> = ({ clickHandler }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [cryptoList, setCryptoList] = useState<any>();\n  const [cryptos] = useState<ICryptoList>(cryptoCurrencies);\n\n  useEffect(() => {\n    const getApi = async () => {\n      const _cryptoList: ICryptoList = { ...cryptos };\n      const tickers = Object.keys(_cryptoList).map((key) => key);\n      const data = await api.get(tickers);\n      let objects = data?.DISPLAY;\n      if (objects) {\n        Object.keys(objects).forEach((key) => {\n          const obj = objects[key].USD;\n          if (_cryptoList.hasOwnProperty(key)) {\n            _cryptoList[key] = {\n              ..._cryptoList[key],\n              ...{\n                currentPrice: formatNumber(obj.PRICE, 2),\n                change: obj.CHANGE24HOUR,\n                marketCap: obj.MKTCAP,\n              },\n            };\n          }\n        });\n      }\n      setCryptoList(_cryptoList);\n      setIsLoading(false);\n    };\n    getApi();\n  }, [setIsLoading, setCryptoList, cryptos]);\n  return (\n    <React.Fragment>\n      {isLoading && cryptoList !== null && typeof cryptoList !== undefined ? (\n        <div className=\"table__loading\">\n          <div>Loading crypto data...</div>\n          <div>\n            <Spinner fill={\"#0388fc\"} />\n          </div>\n        </div>\n      ) : (\n        <div>\n          <CrtypoListHeaders />\n          {Object.keys(cryptoList).map((key: string) => {\n            const _crypto: ICrypto = cryptoList[key];\n            return (\n              <div\n                key={_crypto.ticker}\n                className=\"row crypto__list\"\n                onClick={() =>\n                  clickHandler(\n                    _crypto.ticker,\n                    _crypto.fullName,\n                    _crypto.currentPrice\n                  )\n                }\n              >\n                <div className=\"row\">\n                  <div className=\"crypto__list_name_container\">\n                    <img\n                      src={\n                        process.env.PUBLIC_URL +\n                        `/images/crypto-icons/${_crypto.ticker}.png`\n                      }\n                      alt={_crypto.ticker}\n                      className=\"crypto__list_icon\"\n                    />\n                  </div>\n                  <div className=\"crypto__list_name_container\">\n                    <div>{_crypto.fullName}</div>\n                    <div>{_crypto.ticker}</div>\n                  </div>\n                </div>\n                <div>{_crypto.currentPrice}</div>\n                <div>{_crypto.change}</div>\n                <div>{_crypto.marketCap}</div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default CrytpoList;\n","import React from \"react\";\n\ninterface TooltipProps {\n  text: string;\n  animateArrow?: boolean;\n  showArrow?: boolean;\n  className?: string;\n}\n\nconst Tooltip: React.FC<TooltipProps> = ({\n  text,\n  animateArrow,\n  showArrow,\n  className,\n}) => {\n  const _className = `${className} tooltip`;\n  let _arrowClassname = showArrow\n    ? \"tooltip__arrow_show\"\n    : \"tooltip__arrow_hide\";\n  _arrowClassname += animateArrow ? \" tooltip__arrow_animate\" : \"\";\n  return (\n    <div className={_className}>\n      <span className={_arrowClassname}>&#8592;</span>\n      <span>{text}</span>\n    </div>\n  );\n};\n\nexport default Tooltip;\n","import React, { Dispatch, SetStateAction, useState, useEffect } from \"react\";\nimport Tooltip from \"../tooltip\";\n\ninterface SelectCryptoProps {\n  cardData: ICard;\n  setShowModal: Dispatch<SetStateAction<boolean>>;\n  showTooltip: boolean;\n}\n\nconst SelectCrypto: React.FC<SelectCryptoProps> = ({\n  cardData,\n  setShowModal,\n  showTooltip,\n}) => {\n  const [enabled, setEnabled] = useState(Boolean(cardData.cryptoTicker));\n  const [textClass, setTextClass] = useState(\n    `${enabled ? \"text__header\" : \"text__disabled_header\"}`\n  );\n\n  useEffect(() => {\n    setEnabled(Boolean(cardData.cryptoTicker));\n  }, [setEnabled, setTextClass, cardData.cryptoTicker]);\n\n  useEffect(() => {\n    setTextClass(`${enabled ? \"text__header\" : \"text__disabled_header\"}`);\n  }, [enabled, setTextClass]);\n\n  return (\n    <div className=\"select__crypto_container\">\n      <div className={`row ${textClass}`}>\n        <div>\n          {cardData.cryptoName ? (\n            <React.Fragment>\n              <img\n                src={`${process.env.PUBLIC_URL}/images/crypto-icons/${cardData.cryptoTicker}.png`}\n                alt={cardData.cryptoName}\n              />\n              <span>\n                {cardData.cryptoName} - {cardData.cryptoTicker}\n              </span>\n            </React.Fragment>\n          ) : (\n            <div>Crypto</div>\n          )}\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"link2\" onClick={() => setShowModal(true)}>\n          Select a crypto\n        </div>\n        <div style={{ paddingTop: \"3px\" }}>\n          {showTooltip && (\n            <Tooltip\n              text=\"First, select a crypto\"\n              className=\"tooltip__container\"\n              showArrow={true}\n              animateArrow={true}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectCrypto;\n","import React, {\n  Dispatch,\n  SetStateAction,\n  useState,\n  useEffect,\n  useRef,\n} from \"react\";\nimport { formatNumber, toInt } from \"../../../lib/helpers\";\nimport Tooltip from \"../tooltip\";\nimport CardsContext from \"../../../lib/card-context\";\nimport { usePrice, useRadioHandler } from \"./hooks\";\n\ninterface PurchasePriceProps {\n  cardData: ICard;\n  showTooltip?: boolean;\n  setShowModal: Dispatch<SetStateAction<boolean>>;\n}\n\nconst PurchasePrice: React.FC<PurchasePriceProps> = ({\n  cardData,\n  showTooltip,\n  setShowModal,\n}) => {\n  const { price, setPrice } = usePrice(\n    cardData.cryptoTicker,\n    cardData.cryptoPrice,\n    cardData.purchaseSource\n  );\n  let defaultRadio = cardData.purchaseSource || \"\";\n  let defaultCustom =\n    cardData.purchaseSource === \"custom\" ? cardData.purchasePrice : \"\";\n  const [radioOption, setRadioOption] = useState(defaultRadio);\n  const { updateCardHandler } = React.useContext(CardsContext);\n  const [customPrice, setCustomPrice] = useState<any>(defaultCustom);\n  const [enabled, setEnabled] = useState(Boolean(cardData.cryptoTicker));\n  const [textClass, setTextClass] = useState(\n    `${enabled ? \"\" : \"text__disabled\"}`\n  );\n  let timerRef: any = useRef(null);\n\n  useRadioHandler(\n    radioOption,\n    price,\n    setPrice,\n    customPrice,\n    cardData.cryptoPrice,\n    cardData.id\n  );\n\n  const radioHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setRadioOption(e.target.value);\n  };\n\n  const customHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value !== \"$\") {\n      let _purchasePrice = formatNumber(e.target.value, 6);\n      if (_purchasePrice && _purchasePrice !== \"0\") {\n        setCustomPrice(\"$\" + _purchasePrice);\n      } else {\n        setCustomPrice(\"\");\n      }\n    } else {\n      setCustomPrice(\"\");\n    }\n    clearTimeout(timerRef.current);\n    updateTable(e.target.value);\n  };\n\n  const updateTable = (val: string) => {\n    timerRef.current = setTimeout(() => {\n      setPrice(toInt(val));\n      updateCardHandler(cardData.id, {\n        purchasePrice: val,\n      });\n    }, 100);\n  };\n\n  useEffect(() => {\n    setEnabled(Boolean(cardData.cryptoTicker));\n  }, [setEnabled, setTextClass, cardData.cryptoTicker]);\n\n  useEffect(() => {\n    setTextClass(`${enabled ? \"\" : \"text__disabled\"}`);\n  }, [enabled, setTextClass]);\n\n  const historicHandler = () => {\n    setRadioOption(\"historic\");\n    setShowModal(true);\n  };\n\n  useEffect(() => {\n    setPrice(cardData.purchasePrice);\n  }, [cardData.purchasePrice, setPrice]);\n\n  return (\n    <form>\n      <div className={`row margin__top_10 ${textClass}`}>\n        <div>\n          <label>Purchase price</label>\n          {price ? (\n            <React.Fragment>\n              <span className=\"card__purchasePrice\">\n                ${formatNumber(cardData.purchasePrice, 6)}\n              </span>\n              <span className=\"text__small\">\n                (per coin{\" \"}\n                {radioOption === \"historic\" && cardData.purchaseDate\n                  ? ` on ${cardData.purchaseDate}`\n                  : \"\"}\n                )\n              </span>\n            </React.Fragment>\n          ) : (\n            <span className=\"card_PurchasePrice\"></span>\n          )}\n        </div>\n        <div>\n          {showTooltip && (\n            <Tooltip\n              text=\"Set the sell-price for this cryptocurrency\"\n              className=\"tooltip__container\"\n              showArrow={true}\n              animateArrow={true}\n            />\n          )}\n        </div>\n      </div>\n      <div className={`margin__left_10 ${textClass}`}>\n        <div>\n          <span>\n            <input\n              type=\"radio\"\n              name=\"set-purchase\"\n              value=\"current\"\n              checked={radioOption === \"current\"}\n              onChange={radioHandler}\n              disabled={!enabled}\n            />\n          </span>\n          <label\n            className={enabled ? \"link2\" : \"\"}\n            onClick={() => {\n              if (enabled) setRadioOption(\"current\");\n            }}\n          >\n            Use current price\n          </label>\n        </div>\n        <div>\n          <span>\n            <input\n              type=\"radio\"\n              name=\"set-purchase\"\n              value=\"historic\"\n              checked={radioOption === \"historic\"}\n              onChange={radioHandler}\n              onClick={() => setShowModal(true)}\n              disabled={!enabled}\n            />\n          </span>\n          <label className={enabled ? \"link2\" : \"\"} onClick={historicHandler}>\n            Use price from date\n          </label>\n        </div>\n        <div>\n          <span>\n            <input\n              type=\"radio\"\n              name=\"set-purchase\"\n              value=\"custom\"\n              checked={radioOption === \"custom\"}\n              onChange={radioHandler}\n              disabled={!enabled}\n            />\n          </span>\n          <label\n            className={enabled ? \"link2\" : \"\"}\n            onClick={() => {\n              if (enabled) setRadioOption(\"custom\");\n            }}\n          >\n            Use custom purchase price\n          </label>\n          {radioOption === \"custom\" && enabled && (\n            <span>\n              <input\n                type=\"text\"\n                className=\"input__text_tiny_wider\"\n                onChange={customHandler}\n                value={customPrice}\n              />\n            </span>\n          )}\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default PurchasePrice;\n","import React, { useEffect, useState, Dispatch, SetStateAction } from \"react\";\nimport api from \"../../../lib/api\";\nimport { formatNumber } from \"../../../lib/helpers\";\nimport CardsContext from \"../../../lib/card-context\";\n\nexport const usePrice = (\n  ticker: string | null,\n  currentPrice: string | number | null,\n  purchaseSource: string | null\n) => {\n  const [price, setPrice] = useState(currentPrice);\n  let timerRef: any = React.useRef(null);\n\n  useEffect(() => {\n    const fetchItem = async () => {\n      const data = await api.fetchItem(ticker!);\n      const price = data.USD;\n      setPrice(price);\n      timerRef.current = setTimeout(() => {\n        if (purchaseSource === \"current\") {\n          fetchItem();\n        }\n      }, 10000);\n    };\n    if (ticker && purchaseSource === \"current\") {\n      fetchItem();\n    } else {\n      window.clearTimeout(timerRef.current);\n    }\n    return () => {\n      window.clearTimeout(timerRef.current);\n    };\n  }, [ticker, purchaseSource, currentPrice]);\n\n  return { price, setPrice };\n};\n\nexport const useRadioHandler = (\n  radioOption: string,\n  price: string | number | null,\n  setPrice: Dispatch<SetStateAction<string | number | null>>,\n  customPurchase: any,\n  cryptoPrice: string | number | null,\n  id: string\n) => {\n  const { updateCardHandler } = React.useContext(CardsContext);\n  useEffect(() => {\n    switch (radioOption) {\n      case \"current\":\n        updateCardHandler(id, {\n          purchaseSource: \"current\",\n          purchasePrice: cryptoPrice,\n        });\n        break;\n\n      case \"custom\":\n        setPrice(formatNumber(customPurchase));\n        updateCardHandler(id, {\n          purchaseSource: \"custom\",\n          purchasePrice: customPurchase,\n        });\n        break;\n\n      case \"historic\":\n        break;\n\n      default:\n        setPrice(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [radioOption, price, customPurchase, cryptoPrice, id]);\n\n  return {\n    radioOption,\n    price,\n    customPurchase,\n  };\n};\n\nexport const useSellRadioHandler = (\n  radioOption: string,\n  price: string | number | null,\n  setPrice: Dispatch<SetStateAction<string | number | null>>,\n  customSell: any,\n  cryptoPrice: string | number | null,\n  id: string\n) => {\n  const { updateCardHandler } = React.useContext(CardsContext);\n  useEffect(() => {\n    switch (radioOption) {\n      case \"current\":\n        updateCardHandler(id, {\n          purchaseSource: \"current\",\n          sellPrice: cryptoPrice,\n        });\n        break;\n\n      case \"custom\":\n        setPrice(formatNumber(customSell));\n        updateCardHandler(id, {\n          purchaseSource: \"custom\",\n          sellPrice: customSell,\n        });\n        break;\n\n      case \"historic\":\n        break;\n\n      default:\n        setPrice(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [radioOption, price, customSell, cryptoPrice, id]);\n\n  return {\n    radioOption,\n    price,\n    customPurchase: customSell,\n  };\n};\n","import React, {\n  Dispatch,\n  SetStateAction,\n  useState,\n  useEffect,\n  useRef,\n} from \"react\";\nimport { formatNumber, toInt, isTruthy } from \"../../../lib/helpers\";\nimport Tooltip from \"../tooltip\";\nimport CardsContext from \"../../../lib/card-context\";\nimport { useSellRadioHandler } from \"./hooks\";\n\ninterface SellPriceProps {\n  cardData: ICard;\n  showTooltip?: boolean;\n  setShowModal: Dispatch<SetStateAction<boolean>>;\n}\n\nconst SellPrice: React.FC<SellPriceProps> = ({\n  cardData,\n  showTooltip,\n  setShowModal,\n}) => {\n  const [price, setPrice] = useState<string | number | null>(\n    cardData.sellPrice\n  );\n  let defaultRadio = cardData.sellSource || \"\";\n  let defaultCustom =\n    cardData.sellSource === \"custom\" ? cardData.sellPrice : \"\";\n  const [radioOption, setRadioOption] = useState(defaultRadio);\n  const { updateCardHandler } = React.useContext(CardsContext);\n  const [customSell, setCustomSell] = useState<any>(defaultCustom);\n  const [enabled, setEnabled] = useState<boolean>(\n    isTruthy(cardData.purchasePrice)\n  );\n  const [textClass, setTextClass] = useState(\n    `${enabled ? \"\" : \"text__disabled\"}`\n  );\n  let timerRef: any = useRef(null);\n\n  useSellRadioHandler(\n    radioOption,\n    price,\n    setPrice,\n    customSell,\n    cardData.cryptoPrice,\n    cardData.id\n  );\n\n  const radioHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setRadioOption(e.target.value);\n  };\n\n  const customHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value !== \"$\") {\n      let _sellPrice = formatNumber(e.target.value, 6);\n      if (_sellPrice && _sellPrice !== \"0\") {\n        setCustomSell(\"$\" + _sellPrice);\n      } else {\n        setCustomSell(\"\");\n      }\n    } else {\n      setCustomSell(\"\");\n    }\n    clearTimeout(timerRef.current);\n    updateTable(e.target.value);\n  };\n\n  const updateTable = (val: string) => {\n    timerRef.current = setTimeout(() => {\n      setPrice(toInt(val));\n      updateCardHandler(cardData.id, {\n        sellPrice: val,\n      });\n    }, 100);\n  };\n\n  useEffect(() => {\n    setEnabled(isTruthy(cardData.purchasePrice));\n  }, [setEnabled, setTextClass, cardData.purchasePrice]);\n\n  useEffect(() => {\n    setTextClass(`${enabled ? \"\" : \"text__disabled\"}`);\n  }, [enabled, setTextClass]);\n\n  const historicHandler = () => {\n    setRadioOption(\"historic\");\n    setShowModal(true);\n  };\n\n  useEffect(() => {\n    setPrice(cardData.sellPrice);\n  }, [cardData.sellPrice, setPrice]);\n\n  return (\n    <form>\n      <div className={`row margin__top_10 ${textClass}`}>\n        <div>\n          <label>Sell price</label>\n          {price ? (\n            <React.Fragment>\n              <span className=\"card__sellPrice\">\n                ${formatNumber(cardData.sellPrice, 6)}\n              </span>\n              <span className=\"text__small\">\n                (per coin{\" \"}\n                {radioOption === \"historic\" && cardData.sellDate\n                  ? ` on ${cardData.sellDate}`\n                  : \"\"}\n                )\n              </span>\n            </React.Fragment>\n          ) : (\n            <span className=\"card_SellPrice\"></span>\n          )}\n        </div>\n        <div>\n          {showTooltip && (\n            <Tooltip\n              text=\"Set the sell-price for this cryptocurrency\"\n              className=\"tooltip__container\"\n              showArrow={true}\n              animateArrow={true}\n            />\n          )}\n        </div>\n      </div>\n      <div className={`margin__left_10 ${textClass}`}>\n        <div>\n          <span>\n            <input\n              type=\"radio\"\n              name=\"set-sell\"\n              value=\"current\"\n              checked={radioOption === \"current\"}\n              onChange={radioHandler}\n              disabled={!enabled}\n            />\n          </span>\n          <label\n            className={enabled ? \"link2\" : \"\"}\n            onClick={() => setRadioOption(\"current\")}\n          >\n            Use current price point for selling\n          </label>\n        </div>\n        <div>\n          <span>\n            <input\n              type=\"radio\"\n              name=\"set-sell\"\n              value=\"historic\"\n              checked={radioOption === \"historic\"}\n              onChange={radioHandler}\n              onClick={() => setShowModal(true)}\n              disabled={!enabled}\n            />\n          </span>\n          <label className={enabled ? \"link2\" : \"\"} onClick={historicHandler}>\n            Use price point to sell from date\n          </label>\n        </div>\n        <div>\n          <span>\n            <input\n              type=\"radio\"\n              name=\"set-sell\"\n              value=\"custom\"\n              checked={radioOption === \"custom\"}\n              onChange={radioHandler}\n              disabled={!enabled}\n            />\n          </span>\n          <label\n            className={enabled ? \"link2\" : \"\"}\n            onClick={() => setRadioOption(\"custom\")}\n          >\n            Use custom sell price\n          </label>\n          {radioOption === \"custom\" && enabled && (\n            <span>\n              <input\n                type=\"text\"\n                className=\"input__text_tiny_wider\"\n                onChange={customHandler}\n                value={customSell}\n                disabled={!enabled}\n              />\n            </span>\n          )}\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default SellPrice;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { formatNumber, toInt, isTruthy } from \"../../../lib/helpers\";\nimport Tooltip from \"../tooltip\";\nimport CardsContext from \"../../../lib/card-context\";\n\ninterface InvestmentProps {\n  cardData: ICard;\n  showTooltip?: boolean;\n}\n\nconst Investment: React.FC<InvestmentProps> = ({ cardData, showTooltip }) => {\n  const [investment, setInvestment] = useState<string | number | null>(\n    cardData.investment\n  );\n  const [investmentType, setInvestmentType] = useState(cardData.investmentType);\n  const [lastSavedInput, setLastSavedInput] = useState(cardData.investment);\n  const [coins, setCoins] = useState(cardData.coins);\n  const { updateCardHandler } = React.useContext(CardsContext);\n  let timerRef: any = useRef(null);\n  const [enabled, setEnabled] = useState(\n    Boolean(cardData.cryptoTicker) &&\n      isTruthy(cardData.purchasePrice && isTruthy(cardData.sellPrice))\n  );\n  const [textClass, setTextClass] = useState(\n    `${enabled ? \"\" : \"text__disabled\"}`\n  );\n\n  const radioHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInvestmentType(e.target.value);\n  };\n\n  const labelClick = (t: string) => {\n    setInvestmentType(t);\n  };\n\n  const coinsHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let val = formatNumber(e.target.value);\n    let _investment =\n      parseFloat(e.target.value) * toInt(cardData.purchasePrice);\n    if (val !== \"0\") {\n      setCoins(val.toString());\n      setInvestment(_investment);\n    } else {\n      setCoins(\"\");\n    }\n    clearTimeout(timerRef.current);\n    updateTable(val);\n  };\n\n  const investmentHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let _coins = toInt(\n      toInt(e.target.value) / toInt(cardData.purchasePrice),\n      4\n    );\n    setCoins(_coins);\n    const val = formatNumber(e.target.value);\n    if (val === \"0\") {\n      setInvestment(\"\");\n    } else {\n      setInvestment(val);\n    }\n  };\n\n  const updateTable = (val: string) => {\n    timerRef.current = setTimeout(() => {\n      setLastSavedInput(val);\n    }, 1000);\n  };\n\n  const saveInput = () => {\n    if (lastSavedInput !== investment) {\n      setLastSavedInput(investment);\n    }\n  };\n\n  useEffect(() => {\n    let _investment;\n    _investment = toInt(cardData.purchasePrice) * toInt(coins, 6);\n    updateCardHandler(cardData.id, {\n      investment: _investment,\n      investmentType: investmentType,\n      coins,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    cardData.id,\n    cardData.purchasePrice,\n    investment,\n    investmentType,\n    lastSavedInput,\n    coins,\n  ]);\n\n  useEffect(() => {\n    setEnabled(\n      Boolean(cardData.cryptoTicker) &&\n        isTruthy(cardData.purchasePrice) &&\n        isTruthy(cardData.sellPrice)\n    );\n  }, [\n    setEnabled,\n    cardData.cryptoTicker,\n    cardData.purchasePrice,\n    cardData.sellPrice,\n  ]);\n\n  useEffect(() => {\n    setTextClass(`${enabled ? \"\" : \"text__disabled\"}`);\n  }, [enabled, setTextClass]);\n\n  return (\n    <React.Fragment>\n      <div className={`row margin__top_10 ${textClass}`}>\n        <div>\n          <label>Investment</label>\n        </div>\n        <div>\n          {showTooltip && !isTruthy(investment) && (\n            <Tooltip\n              text=\"Set the $ invested or number of coins purchased\"\n              className=\"tooltip__container\"\n              showArrow={true}\n              animateArrow={true}\n            />\n          )}\n        </div>\n      </div>\n      <div className={`margin__left_10 ${textClass}`}>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"investment-type\"\n            value=\"coins\"\n            checked={investmentType === \"coins\"}\n            disabled={!enabled}\n            onChange={radioHandler}\n          />\n          {enabled ? (\n            <label onClick={() => labelClick(\"coins\")} className=\"link2\">\n              Number of coins purchased\n            </label>\n          ) : (\n            <label className=\"text__disabled\">Number of coins purchased</label>\n          )}\n\n          {investmentType === \"coins\" && (\n            <input\n              type=\"text\"\n              className=\"input__text_tiny\"\n              onChange={coinsHandler}\n              value={coins || \"\"}\n              onBlur={saveInput}\n            />\n          )}\n        </div>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"investment-type\"\n            value=\"dollars\"\n            checked={investmentType === \"dollars\"}\n            disabled={!enabled}\n            onChange={radioHandler}\n          />\n          {enabled ? (\n            <label onClick={() => labelClick(\"dollars\")} className=\"link2\">\n              Total $ amount invested\n            </label>\n          ) : (\n            <label className=\"text__disabled\">Total $ amount invested</label>\n          )}\n\n          {investmentType === \"dollars\" && (\n            <input\n              type=\"text\"\n              className=\"input__text_tiny\"\n              onChange={investmentHandler}\n              value={investment || \"\"}\n              onBlur={saveInput}\n              disabled={!enabled}\n            />\n          )}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Investment;\n","import React, { useState, useEffect } from \"react\";\nimport { formatNumber, calculateReturn, formatNet } from \"../../../lib/helpers\";\n\ninterface ResultsProps {\n  cardData: ICard;\n}\n\nconst Results: React.FC<ResultsProps> = ({ cardData }) => {\n  const [totalReturn, setTotalReturn] = useState<string | null>(null);\n  const [net, setNet] = useState<number | null | string>(null);\n  const [isProfit, setIsProit] = useState(false);\n  const [formattedCoins, setFormattedCoins] = useState(\n    formatNumber(cardData.coins)\n  );\n  const [enabled, setEnabled] = useState(false);\n\n  useEffect(() => {\n    const _return = calculateReturn(cardData.coins, cardData.sellPrice);\n    setFormattedCoins(formatNumber(cardData.coins));\n    if (cardData.coins && cardData.investment) {\n      let _net = formatNet(cardData.investment, _return);\n      if (_net) {\n        setIsProit(_net >= 0);\n        setNet(formatNumber(_net));\n      } else if (_net === 0) {\n        setIsProit(_net >= 0);\n        setNet(formatNumber(_net));\n      }\n      setTotalReturn(_return);\n      setEnabled(true);\n    } else {\n      setEnabled(false);\n    }\n  }, [\n    cardData.coins,\n    cardData.investment,\n    cardData.sellPrice,\n    cardData.purchasePrice,\n    setTotalReturn,\n  ]);\n\n  return (\n    <div className=\"results__container\">\n      {enabled && (\n        <div className=\"table\">\n          <div className=\"table__row\">\n            <div />\n            <div\n              className=\"table__row_result results__header\"\n              id=\"results__header\"\n            >\n              Results\n            </div>\n          </div>\n          <div className=\"table__row\">\n            <div>Crypto: </div>\n            <div className=\"table__row_right\">{cardData.cryptoName}</div>\n          </div>\n\n          <div className=\"table__row\">\n            <div>Coins owned: </div>\n            {formattedCoins && formattedCoins !== \"0\" && (\n              <div className=\"table__row_right\">\n                <span className=\"fadeIn\">\n                  {formattedCoins}\n                  <br />@{cardData.purchasePrice} per coin\n                </span>\n              </div>\n            )}\n          </div>\n\n          <div className=\"table__row\">\n            <div>&nbsp;</div>\n            <div />\n          </div>\n\n          <div className=\"table__row\">\n            <div>Total return: </div>\n            <div className=\"table__row_right\">\n              {totalReturn && (\n                <span className=\"fadeIn\">${formatNumber(totalReturn)}</span>\n              )}\n            </div>\n          </div>\n\n          <div className=\"table__row  table__row_last\">\n            <div>- Amount Invested: </div>\n            <div className=\"table__row_right\">\n              {cardData.investment && (\n                <span className=\"fadeIn\">\n                  ${formatNumber(cardData.investment)}\n                </span>\n              )}\n            </div>\n          </div>\n\n          <div className=\"table__row\">\n            <div>= Net return: </div>\n            <div className=\"table__row_right\">\n              {net && (\n                <span className={isProfit ? \"net__profit\" : \"net__loss  \"}>\n                  ${net}\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Results;\n","import React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-date-picker\";\nimport { formatNumber, formatDate } from \"../../../lib/helpers\";\nimport api from \"../../../lib/api\";\n\ninterface HistoricPriceProps {\n  cryptoTicker: string;\n  cryptoName: string;\n  cryptoPrice?: string | number | null | undefined;\n  clickHandler: (item: string, date: string) => void;\n}\n\nconst HistoricPrice: React.FC<HistoricPriceProps> = ({\n  cryptoTicker,\n  cryptoName,\n  cryptoPrice,\n  clickHandler,\n}) => {\n  const [dateValue, setDateValue] = useState(new Date());\n  const [historicPrice, setHistoricPrice] = useState<\n    string | number | null | undefined\n  >(formatNumber(cryptoPrice));\n  const [hpClassname, setHpClassname] = useState(\"fadeIn\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [historicDate, setHistoricDate] = useState(\"\");\n\n  const setPrice = () => {\n    let p = historicPrice ? historicPrice.toString() : \"\";\n    clickHandler(p, historicDate);\n  };\n\n  const changeHandler = (date: Date) => {\n    if (cryptoPrice) {\n      setHpClassname(\"fadeOut\");\n      setDateValue(date);\n      setIsLoading(true);\n    }\n  };\n\n  useEffect(() => {\n    const getItem = async () => {\n      const timestamp = (dateValue.getTime() / 1000).toString();\n      const data = await api.fetchItem(cryptoTicker, timestamp);\n      const price = data[cryptoTicker.toUpperCase()].USD;\n      setHistoricPrice(formatNumber(price));\n      setIsLoading(false);\n      setHpClassname(\"fadeIn\");\n      setHistoricDate(formatDate(dateValue));\n    };\n    if (isLoading) {\n      getItem();\n    }\n  }, [isLoading, cryptoTicker, dateValue, setIsLoading, setHpClassname]);\n\n  return (\n    <div className=\"historic__modal\">\n      <div\n        className=\"padding__top_5 padding__left_5\"\n        style={{ float: \"right\" }}\n      >\n        <img\n          src={`${process.env.PUBLIC_URL}/images/crypto-icons/${cryptoTicker}.png`}\n          alt={cryptoName}\n          className=\"crypto__image\"\n        />\n        <span>\n          {cryptoName} - {cryptoTicker}\n        </span>\n        {historicPrice && (\n          <span\n            className={`historic__modal_displayDate ${hpClassname} link3`}\n            onClick={setPrice}\n          >\n            ${historicPrice}\n          </span>\n        )}\n      </div>\n      <div>\n        <div>\n          <DatePicker\n            onChange={changeHandler}\n            value={dateValue}\n            autoFocus={true}\n            isOpen={true}\n            maxDate={new Date()}\n            closeCalendar={false}\n          />\n\n          <div className=\"historic__display_price\">\n            {isLoading ? (\n              <div>Loading</div>\n            ) : (\n              <React.Fragment>\n                {historicPrice && (\n                  <div>\n                    <div>\n                      Price of ${cryptoName} on {historicDate}: {historicPrice}\n                    </div>\n                    <div\n                      className={`historic__displayPrice ${hpClassname} link3`}\n                      onClick={setPrice}\n                      style={{ fontWeight: \"bold\" }}\n                    >\n                      Click to use this price point\n                    </div>\n                  </div>\n                )}\n              </React.Fragment>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HistoricPrice;\n","import React, { useState, useEffect } from \"react\";\nimport DeleteCard from \"./DeleteCard\";\nimport Modal from \"../modal\";\nimport CryptoList from \"../crypto-list\";\nimport CardsContext from \"../../../lib/card-context\";\nimport SelectCrypto from \"./SelectCrypto\";\nimport PurchasePrice from \"./PurchasePrice\";\nimport SellPrice from \"./SellPrice\";\nimport Investment from \"./Investment\";\nimport Results from \"./Results\";\nimport HistoricPrice from \"./HistoricPrice\";\nimport { isTruthy } from \"../../../lib/helpers\";\n\n// const stepsToComplete = [\"set-crypto\", \"set-purchase-price\"];\n\ninterface CardProps {\n  cardData: ICard;\n  num: number;\n}\n\nconst Card: React.FC<CardProps> = ({ cardData, num }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [showPriceHistoricModal, setShowPriceHistoricModal] = useState(false);\n  const [showSellHistoricModal, setSellPriceHistoricModal] = useState(false);\n  const { updateCardHandler } = React.useContext(CardsContext);\n  const [incompletedStep, setIncompletedStep] = useState(\"\");\n\n  const closeModalHandler = () => {\n    setShowModal(false);\n    setShowPriceHistoricModal(false);\n    setSellPriceHistoricModal(false);\n  };\n\n  const cryptoClickHandler = (\n    ticker: string,\n    fullName: string | null,\n    cryptoPrice: string | null | number\n  ) => {\n    updateCardHandler(cardData.id, {\n      cryptoName: fullName,\n      cryptoTicker: ticker,\n      cryptoPrice,\n    });\n    setShowModal(false);\n  };\n\n  const historicPriceClickHandler = (\n    historicPrice: string,\n    historicDate: string\n  ) => {\n    setShowPriceHistoricModal(false);\n    updateCardHandler(cardData.id, {\n      purchasePrice: historicPrice,\n      purchaseSource: \"historic\",\n      purchaseDate: historicDate,\n    });\n  };\n\n  const historicSellClickHandler = (\n    historicPrice: string,\n    sellDate: string\n  ) => {\n    setSellPriceHistoricModal(false);\n    updateCardHandler(cardData.id, {\n      sellPrice: historicPrice,\n      sellSource: \"historic\",\n      sellDate,\n    });\n  };\n\n  useEffect(() => {\n    let step = \"set-crypto\";\n    if (cardData.cryptoTicker) {\n      step = \"set-purchase-price\";\n    }\n    if (isTruthy(cardData.purchasePrice)) {\n      step = \"set-sell-price\";\n    }\n    if (isTruthy(cardData.sellPrice)) {\n      step = \"set-investment\";\n    }\n    setIncompletedStep(step);\n  }, [cardData.cryptoTicker, cardData.purchasePrice, cardData.sellPrice]);\n\n  return (\n    <div className=\"card__row\">\n      {showModal && (\n        <Modal\n          title={`Set crytpo`}\n          className=\"crypto__list_modal\"\n          closeOnOutsideClick={true}\n          onClose={closeModalHandler}\n        >\n          <CryptoList clickHandler={cryptoClickHandler} />\n        </Modal>\n      )}\n      {showPriceHistoricModal && (\n        <Modal\n          title={`Base price of ${cardData.cryptoName} from a specific date`}\n          className=\"historic__modal_popup\"\n          closeOnOutsideClick={true}\n          onClose={closeModalHandler}\n        >\n          <HistoricPrice\n            cryptoTicker={cardData.cryptoTicker}\n            cryptoName={cardData.cryptoName}\n            cryptoPrice={cardData.cryptoPrice}\n            clickHandler={historicPriceClickHandler}\n          />\n        </Modal>\n      )}\n      {showSellHistoricModal && (\n        <Modal\n          title={`Base sell price of ${cardData.cryptoName} from a specific date`}\n          className=\"historic__modal_popup\"\n          closeOnOutsideClick={true}\n          onClose={closeModalHandler}\n        >\n          <HistoricPrice\n            cryptoTicker={cardData.cryptoTicker}\n            cryptoName={cardData.cryptoName}\n            cryptoPrice={cardData.cryptoPrice}\n            clickHandler={historicSellClickHandler}\n          />\n        </Modal>\n      )}\n      <div className=\"card__container\">\n        <DeleteCard cardId={cardData.id} enabled={num > 0} />\n        <SelectCrypto\n          cardData={cardData}\n          setShowModal={setShowModal}\n          showTooltip={incompletedStep === \"set-crypto\"}\n        />\n        <PurchasePrice\n          cardData={cardData}\n          showTooltip={incompletedStep === \"set-purchase-price\"}\n          setShowModal={setShowPriceHistoricModal}\n        />\n        <SellPrice\n          cardData={cardData}\n          showTooltip={incompletedStep === \"set-sell-price\"}\n          setShowModal={setSellPriceHistoricModal}\n        />\n        <Investment\n          cardData={cardData}\n          showTooltip={incompletedStep === \"set-investment\"}\n        />\n      </div>\n      <div className=\"card__results\">\n        <Results cardData={cardData} />\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\n\ninterface SaveCardsProps {\n  saveCardsHandler: () => void;\n  active: boolean;\n  resetShouldUpdate: () => void;\n}\n\nconst SaveCards: React.FC<SaveCardsProps> = ({\n  saveCardsHandler,\n  active,\n  resetShouldUpdate,\n}) => {\n  const [isSaving, setIsSaving] = useState(false);\n  const [className, setClassName] = useState(\"saveCards saveCards__inactive\");\n  const [text, setText] = useState(\"Save Cards\");\n\n  const clickHandler = () => {\n    saveCardsHandler();\n    setIsSaving(true);\n    setTimeout(() => {\n      setIsSaving(false);\n      resetShouldUpdate();\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (isSaving) {\n      setText(\"Saving cards...\");\n      setClassName(\"saveCards saveCards__saving\");\n    } else {\n      setText(\"Save Cards\");\n      setClassName(\"saveCards saveCards__inactive\");\n    }\n  }, [isSaving]);\n\n  useEffect(() => {\n    if (active) {\n      setClassName(\"saveCards saveCards__active fuckkkk\");\n    }\n  }, [active]);\n\n  return (\n    <div>\n      <div className={className} onClick={clickHandler}>\n        <span>{text}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default SaveCards;\n","import React, { useState, useMemo, useRef } from \"react\";\nimport Card from \"../card\";\nimport { initialCards } from \"../../../lib/helpers\";\nimport { defaultCard } from \"../../../models/default-card\";\nimport CardsContext from \"../../../lib/card-context\";\nimport { storage } from \"../../../lib/helpers\";\nimport SaveCards from \"./SaveCards\";\n\ninterface IMergeObject {\n  cryptoName: string;\n  cryptoPrice: string | null | number;\n  cryptoTicker: string;\n}\n\nconst initialTime = Date.now() / 1000;\n\nconst Cards: React.FC<{}> = () => {\n  const [cards, setCards] = useState<ICard[]>(storage.get() || initialCards);\n  const [previousUpdate, setPreviousUpdate] = useState<string>();\n  const [cardId, setUpdateCardId] = useState(\"\");\n  const [mergeObject, setMergeObject] = useState<IMergeObject>();\n  const [shouldUpdate, setShouldUpdate] = useState(false);\n  const divRef = useRef<HTMLDivElement>(null);\n\n  const updateCardHandler = (_cardId: string, _mergeObject: IMergeObject) => {\n    let _next = JSON.stringify(_mergeObject);\n    if (_next !== previousUpdate) {\n      setPreviousUpdate(JSON.stringify(_mergeObject));\n      setMergeObject(_mergeObject);\n      setUpdateCardId(_cardId);\n      let secondsPast = Date.now() / 1000 - initialTime;\n      if (secondsPast > 4) {\n        setShouldUpdate(true);\n      }\n    }\n  };\n\n  const resetShouldUpdate = () => {\n    setShouldUpdate(false);\n  };\n\n  const deleteCard = (_cardId: string) => {\n    const idx = cards.findIndex((cardItem) => cardItem.id === _cardId);\n    if (idx > -1) {\n      const _cards = [...cards];\n      _cards.splice(idx, 1);\n      setCards(_cards);\n    }\n  };\n\n  // update the cards\n  useMemo(() => {\n    const idx = cards.findIndex((cardItem) => cardItem.id === cardId);\n    const _cards = [...cards];\n    _cards[idx] = {\n      ..._cards[idx],\n      ...mergeObject,\n    };\n    setCards(_cards);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cardId, mergeObject]);\n\n  const addCardHandler = () => {\n    const newCard = { ...defaultCard };\n    newCard.id = Date.now().toString();\n    const _cards = [...cards];\n    _cards[_cards.length] = newCard;\n    setCards(_cards);\n  };\n\n  const providerValue = {\n    updateCardHandler,\n    deleteCard,\n  };\n\n  const saveCards = () => {\n    storage.save(cards);\n  };\n\n  return (\n    <CardsContext.Provider value={providerValue}>\n      <div ref={divRef}>\n        {cards.map((cardItem, n) => (\n          <Card cardData={cardItem} key={cardItem.id} num={n} />\n        ))}\n        <div className=\"row margin__bottom_20\">\n          <div className=\"link2\" onClick={addCardHandler}>\n            + Add a calculator card\n          </div>\n          <SaveCards\n            saveCardsHandler={saveCards}\n            active={shouldUpdate}\n            resetShouldUpdate={resetShouldUpdate}\n          />\n        </div>\n      </div>\n    </CardsContext.Provider>\n  );\n};\n\nexport default Cards;\n","import React from \"react\";\nimport { ReactComponent as LogoImg } from \"./logo.svg\";\n\nconst Logo = () => (\n  <div>\n    <LogoImg className=\"logo\" />\n  </div>\n);\n\nexport default Logo;\n","import React from \"react\";\nimport Logo from \"../logo\";\n\nconst AppHeader = () => {\n  return (\n    <div className=\"app__header_container\">\n      <Logo />\n      <div className=\"app__header_text\">\n        <div>Crypto Profit Calculator</div>\n        <div>Calculate ROI on most major crypto currencies</div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import React from \"react\";\nimport Cards from \"../../../components/elements/cards\";\nimport AppHeader from \"../../../components/elements/app-header\";\n\nconst App = () => {\n  return (\n    <div className=\"app__container\">\n      <AppHeader />\n      <Cards />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./models/pages/App\";\nimport \"./css/style.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}